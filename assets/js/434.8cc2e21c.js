(window.webpackJsonp=window.webpackJsonp||[]).push([[434],{1587:function(e,a,t){"use strict";t.r(a);var r=t(0),n=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"_3-7-更新用户对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-更新用户对象","aria-hidden":"true"}},[e._v("#")]),e._v(" 3.7 更新用户对象")]),t("p",[e._v("在用户创建成功之后，我们还可以对用户信息进行更新。有两种方式可以完成用户的更新操作：")]),t("ul",[t("li",[e._v("第一种是通过给用户对象属性进行赋值，赋值成功后再调用 "),t("code",[e._v("save")]),e._v(" 方法进行保存更新；")]),t("li",[e._v("第二种则是直接调用 "),t("code",[e._v("update")]),e._v(" 方法进行更新。")])]),t("p",[e._v("一般较为常用的是第二种更新方式。")]),t("p",[e._v("让我们以刚刚新建的用户对象为例，对用户名进行更新。")]),t("p",[e._v("首先，让我们将用户对象从数据库中取出，并赋值给 "),t("code",[e._v("user")]),e._v(" 变量。")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(">>> $user = User::first()\n")])]),t("h2",{attrs:{id:"通过-save-方法更新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通过-save-方法更新","aria-hidden":"true"}},[e._v("#")]),e._v(" 通过 save 方法更新")]),t("p",[e._v("让我们使用属性赋值更新的方法对用户名进行更新，将其名字更改为 "),t("code",[e._v("Summer")]),e._v("：")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(">>> $user->name = 'Summer'\n")])]),t("p",[e._v("这时，新的用户名已赋值成功，但是 "),t("strong",[e._v("尚未")]),e._v(" 保存到数据库，因此查看用户信息时我们能够看到，用户名显示的还是之前的 Aufree。")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('>>> User::first()\n=> App\\Models\\User {#687\n    id: 1,\n    name: "linxi",\n    email: "linxi@qq.com",\n    email_verified_at: null,\n    created_at: "2019-01-09 14:14:48",\n    updated_at: "2019-01-09 14:14:48",\n   }\n')])]),t("p",[e._v("让我们来调用 save 方法对用户信息进行保存。")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(">>> $user->save()\n")])]),t("p",[e._v("这时再次对用户信息进行查询，我们能看到用户名已成功更改。")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('>>> User::first()\n=> App\\Models\\User {#687\n     id: 1,\n     name: "Monkey",\n     email: "linxi@qq.com",\n     email_verified_at: null,\n     created_at: "2019-01-09 14:14:48",\n     updated_at: "2019-01-09 14:14:48",\n    }\n')])]),t("h2",{attrs:{id:"通过-update-方法更新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通过-update-方法更新","aria-hidden":"true"}},[e._v("#")]),e._v(" 通过 update 方法更新")]),t("p",[e._v("下面让我们再来使用 update 方法将用户名更改回 Aufree：")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(">>> $user->update(['name'=>'Linxi'])\n")])]),t("p",[e._v("再次查询用户信息，可看到改动成功。")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('>>> User::first()\n=> App\\Models\\User {#685\n     id: 1,\n     name: "Linxi",\n     email: "linxi@qq.com",\n     created_at: "2019-01-09 14:14:48",\n     updated_at: "2019-01-09 14:14:48",\n   }\n')])]),t("p",[e._v("至此，用户对象已成功存入数据库。Eloquent 除 "),t("code",[e._v("create")]),e._v("，"),t("code",[e._v("update")]),e._v(" 之外还提供了很多其它的方法来方便我们跟数据库进行交互，后面的教程中会讲到更多关于 Eloquent 模型的基本使用，你也可以通过查阅 "),t("a",{attrs:{href:"https://laravel-china.org/docs/laravel/5.7/eloquent/2294",target:"_blank",rel:"noopener noreferrer"}},[e._v("相关文档")]),e._v(" 来进行深入学习。")])])}],!1,null,null,null);a.default=n.exports}}]);