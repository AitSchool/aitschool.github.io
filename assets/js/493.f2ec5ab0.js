(window.webpackJsonp=window.webpackJsonp||[]).push([[493],{1675:function(a,t,s){"use strict";s.r(t);var e=s(0),r=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"开发环境搭建-macos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发环境搭建-macos","aria-hidden":"true"}},[a._v("#")]),a._v(" 开发环境搭建 - MacOS")]),s("h2",{attrs:{id:"系统要求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#系统要求","aria-hidden":"true"}},[a._v("#")]),a._v(" 系统要求")]),s("blockquote",[s("p",[a._v("苹果 Mac OS X Yosemite 及以上；")])]),s("h2",{attrs:{id:"步骤简略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#步骤简略","aria-hidden":"true"}},[a._v("#")]),a._v(" 步骤简略")]),s("p",[a._v("接下来让我们按照这几个步骤来完成整个 Laravel 开发环境的安装及配置：")]),s("ul",[s("li",[a._v("安装 VirtualBox")]),s("li",[a._v("安装 Vagrant")]),s("li",[a._v("导入 Homestead Box 虚拟机盒子")]),s("li",[a._v("安装 Git")]),s("li",[a._v("安装 Homestead 管理脚本")]),s("li",[a._v("配置 Homestead.yaml 文件")]),s("li",[a._v("启动 Homestead 虚拟机")])]),s("h2",{attrs:{id:"安装-virtualbox"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-virtualbox","aria-hidden":"true"}},[a._v("#")]),a._v(" 安装 VirtualBox")]),s("p",[a._v("VirtualBox 是 Oracle 公司的开源虚拟机软件。VirtualBox 号称是最强的免费虚拟机软件，它不仅功能齐全，而且性能也很优异！VirtualBox 支持大部分流行的系统，如：Mac, Windows, Linux 等。")]),s("p",[a._v("本课程撰写时最新的 VirtualBox 版本为 5.2.6，也是本书教程使用的版本，如果你安装的是之后更新的 VirtualBox，那也不会有太大问题，因为软件更新时一般都会对之前的版本进行兼容处理。但我还是建议你使用与我相同的 VirtualBox 版本，以免有歧义，你可以前往 "),s("a",{attrs:{href:"https://www.virtualbox.org/wiki/Downloads",target:"_blank",rel:"noopener noreferrer"}},[a._v("官网下载")]),a._v(" 或者使用 "),s("a",{attrs:{href:"https://pan.baidu.com/s/1slWENqH#list/path=%2F",target:"_blank",rel:"noopener noreferrer"}},[a._v("百度盘")]),a._v("下载。")]),s("blockquote",[s("p",[a._v("注意：如果你安装 VirtualBox 5.2.6 版遇到问题的话，可以到 VirtualBox 官网 下载当前操作系统相对应的安装包进行尝试。")])]),s("p",[a._v("下载完成之后，双击安装包进行安装。")]),s("p",[s("img",{attrs:{src:"https://fsdhubcdn.phphub.org/uploads/images/201705/15/1/GFmMfo6ssc.png",alt:"file"}})]),s("p",[a._v("之后按照提示操作一步一步进行安装即可。")]),s("h2",{attrs:{id:"安装-vagrant"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-vagrant","aria-hidden":"true"}},[a._v("#")]),a._v(" 安装 Vagrant")]),s("p",[a._v("Vagrant 是用来管理虚拟机的工具，支持当前主流的虚拟机系统如 VirtualBox、VMware、AWS 等。Vagrant 的主要作用是提供一个可配置、可移植和复用的软件环境。Vagrant 让你通过编写一个 Vagrantfile 文件来控制虚拟机的启动、虚拟机网络环境的配置、虚拟机与主机间的文件共享，以及启动后自动执行一些配置脚本，如自动执行一个 Shell Script 来安装一些必备的开发工具，如安装配置MySQL、PHP，甚至是自动配置 Nginx 站点。这意味着，在一个多人开发的项目中，你只需要同步 Vagrantfile 文件，就可以保证参与项目的每个人各自的机器上拥有一致的开发环境。")]),s("p",[a._v("本书撰写时最新的 Vagrant 版本为 2.0.2，也是本书教程使用的版本。同样的，我也建议你安装与本书相同的 Vagrant 版本，2.0.2 版本的 Vagrant 可以使用 "),s("a",{attrs:{href:"https://releases.hashicorp.com/vagrant/2.0.2/",target:"_blank",rel:"noopener noreferrer"}},[a._v("迅雷下载链接")]),a._v(" 或者 "),s("a",{attrs:{href:"https://pan.baidu.com/s/1slWENqH#list/path=%2F",target:"_blank",rel:"noopener noreferrer"}},[a._v("百度盘")]),a._v("下载。")]),s("p",[a._v("然后一步一步按照默认安装即可。")]),s("p",[s("img",{attrs:{src:"https://fsdhubcdn.phphub.org/uploads/images/201705/15/1/uDC2T32kXb.png",alt:"file"}})]),s("h2",{attrs:{id:"homestead-介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#homestead-介绍","aria-hidden":"true"}},[a._v("#")]),a._v(" Homestead 介绍")]),s("p",[a._v("Homestead 利用 Vagrantfile 提供的便利，定制了一整套的可配置、可移植和复用的 Laravel 开发环境。Homestead 虚拟机里面包含了 Nginx Web 服务器、PHP 7.0、MySQL、Postgres、Redis、Memcached、Node，以及所有你在使用 Laravel 开发时需要用到的各种软件。")]),s("p",[a._v("Homestead 包含了两个东西：")]),s("ul",[s("li",[a._v("Homestead 管理脚本；")]),s("li",[a._v("Homestead Box 虚拟机盒子。")])]),s("p",[a._v("接下来独自说明下。")]),s("ol",[s("li",[a._v("Homestead 管理脚本\n"),s("a",{attrs:{href:"https://github.com/laravel/homestead",target:"_blank",rel:"noopener noreferrer"}},[a._v("Homestead")]),a._v(" 脚本使用 Ruby 和 Shell 脚本编写而成。原理是对 Vagrantfile 文件做定制。将从 ~ /Homestead/Homestead.yaml 读取的配置信息，在 provision 时，解析为 Vagrant 命令并进行对虚拟机的配置。Homestead 脚本的作用在于，提供了极其简单易用的接口，使我们只需要通过傻瓜化配置，即可完成复杂的任务。以下是几个常用的任务：")])]),s("ul",[s("li",[a._v("IP 配置，端口映射；")]),s("li",[a._v("Nginx Site 创建；")]),s("li",[a._v("数据库创建；")]),s("li",[a._v("主机文件夹挂载到虚拟机等任务。")])]),s("p",[a._v("所有 Homestead 的版本历史在 此处 可以找到。在本书中，为了提高操作的效率，我们将会使用定制版本的 Homestead。")]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("Homestead Box 虚拟机盒子")])]),s("p",[a._v("homestead.box 虚拟机盒子是提前打包好的 Vagrant Box 虚拟机盒子，里面预装了 Nginx Web 服务器、PHP 7.0、MySQL、Postgres、Redis、Memcached、Node，以及所有你在使用 Laravel 开发时所需要用到的各种软件。")]),s("p",[a._v("所有虚拟机盒子版本历史 "),s("a",{attrs:{href:"https://app.vagrantup.com/laravel/boxes/homestead",target:"_blank",rel:"noopener noreferrer"}},[a._v("在此")]),a._v("。")]),s("p",[s("img",{attrs:{src:"https://fsdhubcdn.phphub.org/uploads/images/201705/15/1/U8hJY6A9Bf.png",alt:"file"}})]),s("p",[a._v("可以看出 Homestead Box 虚拟机盒子有很多版本。不过，如 Homestead 脚本，为了学习的流畅性，我们接下来将会使用定制版本的虚拟机盒子，你不需要太担心版本的事情。")]),s("h2",{attrs:{id:"安装和使用-homestead"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装和使用-homestead","aria-hidden":"true"}},[a._v("#")]),a._v(" 安装和使用 Homestead")]),s("p",[a._v("接下来，我们会讲解：")]),s("ul",[s("li",[a._v("下载和导入 Homestead Box 虚拟机盒子；")]),s("li",[a._v("安装 Git ，为下载 Homestead 管理脚本做准备；")]),s("li",[a._v("使用 Git 下载 Homestead 管理脚本；")])]),s("ol",[s("li",[a._v("下载和导入 Homestead Box\n由于国内的网络环境原因，我们特意为大家定制了适用于国情的 Homestead 安装包，该安装包提供了以下内容：")])]),s("ul",[s("li",[a._v("Composer 加速，配置了 "),s("a",{attrs:{href:"https://laravel-china.org/composer",target:"_blank",rel:"noopener noreferrer"}},[a._v("Composer 中国全量镜像")]),a._v(" 支持；")]),s("li",[a._v("默认集成 Heroku 工具；")]),s("li",[a._v("默认集成 Yarn，并为 Yarn 加了淘宝镜像的加速；")]),s("li",[a._v("使用 CNPM 对 NPM 进行加速。")])]),s("p",[a._v("接下来让我们开始进行 Homestead 的安装，首先我们需要下载 "),s("a",{attrs:{href:"http://download.fsdhub.com/lt-homestead-3-0-0-2017082400.zip",target:"_blank",rel:"noopener noreferrer"}},[a._v("Homestead 虚拟机盒子")]),a._v("，建议大家使用迅雷离线下载或者其他离线下载方式下载此盒子。")]),s("p",[a._v("下载后的文件为 lt-homestead-3-0-0-2017082400.zip，请对其进行 zip 解压操作，解压成功后可以看到目录 lt-homestead-3-0-0-2017082400，此目录下包含两个文件：")]),s("ul",[s("li",[a._v("homestead-virtualbox-3.0.0.box（教程定制化过的 Homestead 盒子）")]),s("li",[a._v("metadata.json（盒子的导入配置文件）")])]),s("p",[a._v("在解压目录中 lt-homestead-3-0-0-2017082400 运行以下命令导入 Box：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" vagrant box add metadata.json\n")])]),s("blockquote",[s("p",[a._v("注意：请必须解压到 非中文路径，有同学反馈中文路径会出现不可预知问题。")])]),s("p",[a._v("如下图所示：")]),s("p",[s("img",{attrs:{src:"https://fsdhubcdn.phphub.org/uploads/images/201708/24/1/MnmDSnQ7MT.png",alt:"file"}})]),s("p",[a._v("至此完成 Homestead Vagrant 盒子的导入。")]),s("blockquote",[s("p",[a._v("注：导入成功后，lt-homestead-3-0-0-2017082400 文件夹可任意删除。")])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("安装 Git\n现在我们需要安装 Git ，为下载 Homestead 管理脚本做准备。在 Mac OS X 下，我们可以通过安装 Xcode 命令行来快速安装 Git：")])]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" xcode-select --install\n")])]),s("p",[a._v("安装成功后使用以下命令来检测是否安装成功：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" --version\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" version 2.9.3 "),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Apple Git-75"),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),s("blockquote",[s("p",[a._v("注：不需要担心你的版本与我不同。")])]),s("ol",{attrs:{start:"3"}},[s("li",[a._v("下载 Homestead 管理脚本")])]),s("p",[a._v("因国内网络限制，为方便下载和后续管理脚本的流畅使用，本书中将使用定制版本的 Homestead 脚本，定制版有以下优势：")]),s("ul",[s("li",[a._v("从国内 coding.net 网站下载，下载速度会比 官方 更快；")]),s("li",[a._v("对脚本进行修改，移除了每一次 provision 时 composer self-update 的卡顿。")])]),s("p",[a._v("接下来，使用 Git 下载定制版的 Homestead：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~\n"),s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://git.coding.net/summerblue/homestead.git Homestead\n")])]),s("blockquote",[s("p",[a._v("注：我们把 Homestead 放在 ~ /Homestead 路径下，为方便后面的讲解，请保持一致。")])]),s("p",[a._v("完成之后我们需要进入 Homestead 目录，使用 Git 检出我们需要的 Homestead 版本：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~/Homestead\n"),s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout v5.4.0\n")])]),s("blockquote",[s("p",[a._v("注：为了保证后续讲解的流畅性，请注意版本的一致性，这里我们使用 v5.4.0。")])]),s("p",[a._v("接下来我们需要初始化 Homestead：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{attrs:{class:"token function"}},[a._v("bash")]),a._v(" init.sh\n")])]),s("p",[a._v("运行以上命令后，会在 ~ /Homestead 目录下生成以下三个文件：")]),s("ul",[s("li",[a._v("Homestead.yaml - 主要配置信息文件，我们可以在此文件中配置 Homestead 的站点和数据库等信息；")]),s("li",[a._v("after.sh - 每一次 Homestead 盒子重置后（provision）会调用的 shell 脚本文件；")]),s("li",[a._v("aliases - 每一次 Homestead 盒子重置后（provision），会被替换至虚拟机的 ~ /.bash_aliases 文件中，aliases 里可以放一些快捷命令的定义。")])]),s("p",[a._v("接下来我们将会对 Homestead.yaml 文件的各项配置信息进行详细讲解。")]),s("h2",{attrs:{id:"homestead-yaml-配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#homestead-yaml-配置文件","aria-hidden":"true"}},[a._v("#")]),a._v(" Homestead.yaml 配置文件")]),s("p",[a._v("首先打开文件。通过运行下面命令快速打开 Homestead.yaml 文件：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" subl ~/Homestead/Homestead.yaml\n")])]),s("p",[a._v("为了行文方便，后面如果没有提示的话， Homestead.yaml 指的是 ~ /Homestead/Homestead.yaml 文件。")]),s("p",[a._v("Homestead.yaml里的配置大致可以分为以下几种：")]),s("ol",[s("li",[a._v("虚拟机设置；")]),s("li",[a._v("SSH 秘钥登录配置；")]),s("li",[a._v("共享文件夹配置；")]),s("li",[a._v("站点配置；")]),s("li",[a._v("数据库配置；")]),s("li",[a._v("自定义变量；")])]),s("p",[a._v("接下来我们逐个讲解。")]),s("ol",[s("li",[a._v("虚拟机设置\nHomestead 支持我们对虚拟机的 IP，内存，CPU，虚拟机的默认提供者进行配置。这里我们基本不需要做任何配置，因此可以跳过。")])]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ip: "),s("span",{attrs:{class:"token string"}},[a._v('"192.168.10.10"')]),a._v("\nmemory: 2048\ncpus: 1\nprovider: virtualbox\n")])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("SSH 秘钥登录配置\nauthorize 选项是指派登录虚拟机授权连接的公钥文件，此文件填写的是主机上的公钥文件地址，虚拟机初始化时，此文件里的内容会被复制存储到虚拟机的 /home/vagrant/.ssh/authorized_keys文件中，从而实现 SSH 免密码登录。在这里我们默认填写即可。")])]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("authorize: ~/.ssh/id_rsa.pub\n")])]),s("p",[a._v("keys 是数组选项，填写的是本机的 SSH 私钥文件地址。虚拟机初始化时，会将此处填写的所有 SSH 私钥文件复制到虚拟机的 /home/vagrant/.ssh/ 文件夹中，从而使虚拟机能共享主机上的 SSH 私钥文件，使虚拟机具备等同于主机的身份认证。此功能为 SSH 授权提供了便利，例如在后面章节中，我们只需要在 GitHub 上配置一个 SSH 公钥，即可实现 GitHub 对虚拟机和主机共同认证。")]),s("p",[a._v("此处我们将公钥和私钥一起同步到虚拟机中：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("keys:\n    - ~/.ssh/id_rsa\n    - ~/.ssh/id_rsa.pub\n")])]),s("p",[a._v("接下来我们来生成 SSH Key，开始之前，我们先使用以下命令来检查主机上是否已经生成过 SSH Key：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{attrs:{class:"token function"}},[a._v("ls")]),a._v(" -al ~/.ssh\n")])]),s("p",[a._v("如果存在 id_rsa 和 id_rsa.pub的话，请跳过以下生成 SSH 的步骤继续阅读剩下内容。")]),s("p",[a._v("否则使用以下方法来生成 SSH Key，请将 your_email@example.com 替换为你的邮箱：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" ssh-keygen -t rsa -C "),s("span",{attrs:{class:"token string"}},[a._v('"your_email@example.com"')]),a._v("\nGenerating public/private rsa key pair.\n")])]),s("p",[a._v("命令行会提示让你指定秘钥的名称，按回车键将 SSH Key 保存到默认文件名即可：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("Enter a "),s("span",{attrs:{class:"token function"}},[a._v("file")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),s("span",{attrs:{class:"token function"}},[a._v("which")]),a._v(" to save the key "),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),a._v("/Users/you/.ssh/id_rsa"),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v(": "),s("span",{attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Press enter"),s("span",{attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])]),s("p",[a._v("接下来会询问你为 SSH Key 设置密码，按回车键即可，默认为空密码：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("Enter passphrase "),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),a._v("empty "),s("span",{attrs:{class:"token keyword"}},[a._v("for")]),a._v(" no passphrase"),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v(": "),s("span",{attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Type a passphrase"),s("span",{attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\nEnter same passphrase again: "),s("span",{attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Type passphrase again"),s("span",{attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])]),s("p",[a._v("可以都选择默认，也就是直接敲击几个 Enter 键即可。这时候我们再检查一下：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{attrs:{class:"token function"}},[a._v("ls")]),a._v(" -al ~/.ssh\n")])]),s("p",[a._v("可以看到以下两个文件：")]),s("ul",[s("li",[a._v("id_rsa —— SSH 秘钥的 私钥 (Private Key)")]),s("li",[a._v("id_rsa.pub —— SSH 秘钥的 公钥 (Public Key)")])]),s("ol",{attrs:{start:"3"}},[s("li",[a._v("共享文件夹配置")])]),s("p",[a._v("我们可以通过 folders 来指明本机要映射到 Homestead 虚拟机上的文件夹。")]),s("ul",[s("li",[a._v("map 对应的是我们本机的文件夹")]),s("li",[a._v("to 对应的是 Homestead 上的文件夹")])]),s("p",[a._v("为了后续课程讲解，请统一配置如下：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("folders:\n    - map: ~/Code\n      to: /home/vagrant/Code\n")])]),s("p",[a._v("默认 Homestead 会将我们本机的 ~/Code 文件夹映射到 /home/vagrant/Code 文件夹上。现在我们本机还没有 ~/Code 文件夹，让我们来创建一个：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~\n"),s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" Code\n")])]),s("p",[a._v("在后面的章节中，我们将会在该文件夹下放置我们所有的 Laravel 项目，Homestead 会把该文件夹下的项目自动映射到虚拟机的 /home/vagrant/Code 文件夹上。")]),s("ol",{attrs:{start:"4"}},[s("li",[a._v("站点配置\n站点配置允许你在主机里，通过域名来访问虚拟机里的 Laravel 应用。如下面 sites 配置所示，将 homestead.test 映射到一个 Laravel 项目的 public 目录上。这一行配置，会命令 Homestead 为我们新建一个 Nginx 站点，并且把 Web Root 配置到指定目录下。Laravel 应用的 Nginx 站点 Web Root 配置，默认就是在根目录下的 public 目录。")])]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("sites:\n    - map: homestead.test\n      to: /home/vagrant/Code/Laravel/public\n")])]),s("p",[a._v("目前 Laravel 项目并不存在。这里先统一配置为以上，请不用着急，在后续的章节中，我们会创建该 Laravel 项目。")]),s("p",[a._v("另外，主机里直接访问虚拟机站点，必须通过绑定 hosts 来实现。接下来我们利用 hosts 文件绑定 homestead.test 到虚拟机 IP 192.168.10.10 上。hosts 文件的完整路径为 /etc/hosts，可使用下面命令打开：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" subl /etc/hosts\n")])]),s("p",[a._v("在 hosts 文件的最后面加入以下一行：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("192.168.10.10  homestead.test\n")])]),s("p",[a._v("至此站点就配置好了，等我们在后面章节创建 Laravel 项目后，即可通过浏览器访问 homestead.test 站点")]),s("ol",{attrs:{start:"5"}},[s("li",[a._v("数据库配置\n我们可以为 Homestead 指定数据库名称，这里使用默认设置即可。")])]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("databases:\n    - homestead\n")])]),s("ol",{attrs:{start:"6"}},[s("li",[a._v("自定义变量\n最后，如果你需要自定义一些在虚拟机上可以使用的自定义变量，则可以在 variables 中进行定义。")])]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("variables:\n    - key: APP_ENV\n      value: local\n")])]),s("p",[a._v("Homestead 自定义变量在本书中并未使用，知悉有此功能即可。")]),s("h2",{attrs:{id:"运行-vagrant"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行-vagrant","aria-hidden":"true"}},[a._v("#")]),a._v(" 运行 Vagrant")]),s("p",[a._v("完成了 Homestead 的配置，接下来我们要开始启动虚拟机了。")]),s("p",[a._v("在命令中输入 vagrant，能看到 Vagrant 为我们提供了一些便利的命令行，下面简单介绍一下 Vagrant 常用的一些命令行的使用：")]),s("p",[a._v("命令行 说明")]),s("ul",[s("li",[a._v("vagrant init    初始化 vagrant")]),s("li",[a._v("vagrant up  启动 vagrant")]),s("li",[a._v("vagrant halt    关闭 vagrant")]),s("li",[a._v("vagrant ssh 通过 SSH 登录 vagrant（需要先启动 vagrant）")]),s("li",[a._v("vagrant provision   重新应用更改 vagrant 配置")]),s("li",[a._v("vagrant destroy 删除 vagrant")])]),s("p",[a._v("让我们开始启动 Homestead：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~/Homestead "),s("span",{attrs:{class:"token operator"}},[a._v("&&")]),a._v(" vagrant up\n")])]),s("p",[a._v("第一次启动时，Vagrant 会做以下这几件事情：")]),s("ul",[s("li",[a._v("以导入的 Homestead 虚拟机盒子为模板，新建一台虚拟机；")]),s("li",[a._v("并按照 Homestead.yaml 里的配置信息，对这台新建的虚拟机进行配置；")]),s("li",[a._v("配置完成后启动虚拟机。")])]),s("p",[a._v("成功启动后，还是在 ~ /Homestead 目录中，通过以下命令来 SSH 登录 Homestead 虚拟机中：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" vagrant "),s("span",{attrs:{class:"token function"}},[a._v("ssh")]),a._v("\n")])]),s("p",[a._v("在我们登录成功后，你能看到类似于如下图的界面，现在我们在该终端界面中输入的所有命令都将运行在 Homestead 虚拟机上。")]),s("p",[s("img",{attrs:{src:"https://fsdhubcdn.phphub.org/uploads/images/201705/15/1/JWXEpjiUdi.png",alt:"file"}})]),s("p",[a._v("在虚拟机界面下可以输入退出虚拟机：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{attrs:{class:"token keyword"}},[a._v("exit")]),a._v("\n")])]),s("p",[a._v("最后尝试关闭 Homestead：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" vagrant halt\n")])])])}],!1,null,null,null);t.default=r.exports}}]);