(window.webpackJsonp=window.webpackJsonp||[]).push([[389],{1519:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"_2-6-小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-小结","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.6 小结")]),a("h2",{attrs:{id:"提交代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交代码","aria-hidden":"true"}},[t._v("#")]),t._v(" 提交代码")]),a("p",[t._v("至此，我们已完成本章的项目开发，接下来让我们切回到 Git 的主分支上。")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" add -A\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{attrs:{class:"token string"}},[t._v('"Finish layout and routes"')]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n")])]),a("p",[t._v("这时我们运行 Git 的状态检查命令，会发现新增了一个 "),a("code",[t._v("public/css")]),t._v(" 文件夹。这是为什么呢？")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" status\n"),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" status\nOn branch master\nYour branch is up-to-date with "),a("span",{attrs:{class:"token string"}},[t._v("'origin/master'")]),a("span",{attrs:{class:"token keyword"}},[t._v(".")]),t._v("\nChanges not staged "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" commit:\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),a("span",{attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to update what will be committed"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),a("span",{attrs:{class:"token string"}},[t._v('"git checkout -- <file>..."')]),t._v(" to discard changes "),a("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" working directory"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    modified:   public/css/app.css\n\nUntracked files:\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),a("span",{attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to include "),a("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" what will be committed"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    public/mix-manifest.json\n\nno changes added to commit "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),a("span",{attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" and/or "),a("span",{attrs:{class:"token string"}},[t._v('"git commit -a"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("p",[t._v("原因是我们在前面使用了 "),a("code",[t._v("npm run watch-poll")]),t._v(" 来监听文件的更改并持续编译，因此当我们切回到主分支上时，"),a("code",[t._v("app.scss")]),t._v(" 文件会回到一开始在主分支上未经过任何修改的状态，这时 "),a("code",[t._v("app.scss")]),t._v(" 文件被 watch-poll 任务检测到发生更改，便会对该文件进行编译，最终产生一个 "),a("code",[t._v("public/css/app.css")]),t._v(" 文件。但这个文件对我们来说是个累赘，没有一点作用，原因如下：")]),a("ol",[a("li",[t._v("新编译的 "),a("code",[t._v("app.css")]),t._v(" 文件没有包含我们本章新添加的样式代码，因为它是由初始状态的 "),a("code",[t._v("app.scss")]),t._v(" 文件编译成的。")]),a("li",[t._v("在 Git 分支 "),a("code",[t._v("filling-layout-style")]),t._v(" 上已新增了 "),a("code",[t._v("app.css")]),t._v("，若将该分支与主分支进行合并，将导致文件冲突的情况发生。")])]),a("p",[t._v("解决冲突的方法很简单，先检出 Master，放弃所有文件修改，再进行分支合并即可。")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n$ "),a("span",{attrs:{class:"token function"}},[t._v("rm")]),t._v(" -f public/mix-manifest.json\n$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" merge filling-layout-style\n")])]),a("p",[t._v("最后让我们将代码推送到 GitHub 上。")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])]),a("h2",{attrs:{id:"学到了什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#学到了什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 学到了什么？")]),a("p",[t._v("经过本章节的学习，我们学到了以下内容：")]),a("ul",[a("li",[t._v("Bootstrap 前端框架的基本介绍与使用；")]),a("li",[t._v("Laravel Mix 前端工作流；")]),a("li",[t._v("Sass 语法的基本使用；")]),a("li",[t._v("局部视图的定义和引用；")]),a("li",[t._v("命名路由的使用；")])])])}],!1,null,null,null);s.default=e.exports}}]);