(window.webpackJsonp=window.webpackJsonp||[]).push([[457],{1201:function(a,t,s){a.exports=s.p+"assets/img/02_homestead_win_10.7ef4106f.png"},1202:function(a,t,s){a.exports=s.p+"assets/img/02_homestead_win_9.67d147fb.png"},1203:function(a,t,s){a.exports=s.p+"assets/img/02_homestead_win_8.8c628da8.png"},1204:function(a,t,s){a.exports=s.p+"assets/img/02_homestead_win_7.94ea76c0.png"},1205:function(a,t,s){a.exports=s.p+"assets/img/02_homestead_win_6.dc5d99ac.png"},1206:function(a,t,s){a.exports=s.p+"assets/img/02_homestead_win_5.b92987ca.png"},1207:function(a,t,s){a.exports=s.p+"assets/img/02_homestead_win_4.cd09a897.png"},1208:function(a,t,s){a.exports=s.p+"assets/img/02_homestead_win_3.56d7c9f8.png"},1209:function(a,t,s){a.exports=s.p+"assets/img/02_homestead_win_2.ce0cf2e6.png"},1210:function(a,t,s){a.exports=s.p+"assets/img/02_homestead_win_1.2f653187.png"},1621:function(a,t,s){"use strict";s.r(t);var e=[function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"开发环境搭建-windows"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开发环境搭建-windows","aria-hidden":"true"}},[a._v("#")]),a._v(" 开发环境搭建 - Windows")]),e("h2",{attrs:{id:"系统要求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#系统要求","aria-hidden":"true"}},[a._v("#")]),a._v(" 系统要求")]),e("blockquote",[e("p",[a._v("Windows 7 及以上。")])]),e("h2",{attrs:{id:"步骤简略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤简略","aria-hidden":"true"}},[a._v("#")]),a._v(" 步骤简略")]),e("p",[a._v("接下来让我们按照这几个步骤来完成整个 Laravel 开发环境的安装及配置：")]),e("ol",[e("li",[a._v("安装 VirtualBox")]),e("li",[a._v("安装 Vagrant")]),e("li",[a._v("导入 Homestead Box 虚拟机盒子")]),e("li",[a._v("安装 Git")]),e("li",[a._v("安装 Homestead 管理脚本")]),e("li",[a._v("配置 Homestead.yaml 文件")]),e("li",[a._v("启动 Homestead 虚拟机")])]),e("h2",{attrs:{id:"安装-virtualbox"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-virtualbox","aria-hidden":"true"}},[a._v("#")]),a._v(" 安装 VirtualBox")]),e("p",[a._v("VirtualBox 是 Oracle 公司的开源虚拟机软件。VirtualBox 号称是最强的免费虚拟机软件，它不仅功能齐全，而且性能也很优异！VirtualBox 支持大部分流行的系统，如：Mac, Windows, Linux 等。")]),e("p",[a._v("请前往 "),e("a",{attrs:{href:"https://pan.baidu.com/s/1jH6o5sa",target:"_blank",rel:"noopener noreferrer"}},[a._v("百度盘下载")]),a._v("。")]),e("p",[a._v("下载完成之后，双击安装包进行安装。")]),e("p",[e("img",{attrs:{src:s(1210),alt:"file"}})]),e("p",[a._v("之后按照提示操作一步一步进行安装即可。")]),e("h2",{attrs:{id:"安装-vagrant"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-vagrant","aria-hidden":"true"}},[a._v("#")]),a._v(" 安装 Vagrant")]),e("p",[a._v("Vagrant 是用来管理虚拟机的工具，支持当前主流的虚拟机系统如 VirtualBox、VMware、AWS 等。Vagrant 的主要作用是提供一个可配置、可移植和复用的软件环境。Vagrant 让你通过编写一个 Vagrantfile 文件来控制虚拟机的启动、虚拟机网络环境的配置、虚拟机与主机间的文件共享，以及启动后自动执行一些配置脚本，如自动执行一个 Shell Script 来安装一些必备的开发工具，如安装配置MySQL、PHP，甚至是自动配置 Nginx 站点。这意味着，在一个多人开发的项目中，你只需要同步 Vagrantfile 文件，就可以保证参与项目的每个人各自的机器上拥有一致的开发环境。")]),e("p",[a._v("请前往 "),e("a",{attrs:{href:"https://pan.baidu.com/s/1jH6o5sa",target:"_blank",rel:"noopener noreferrer"}},[a._v("百度盘下载")]),a._v("。")]),e("p",[a._v("然后一步一步按照默认安装即可。")]),e("p",[e("img",{attrs:{src:s(1209),alt:"file"}})]),e("h2",{attrs:{id:"homestead-介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#homestead-介绍","aria-hidden":"true"}},[a._v("#")]),a._v(" Homestead 介绍")]),e("p",[a._v("Homestead 利用 Vagrantfile 提供的便利，定制了一整套的可配置、可移植和复用的 Laravel 开发环境。Homestead 虚拟机里面包含了 Nginx Web 服务器、PHP 7、MySQL、Postgres、Redis、Memcached、Node，以及所有你在使用 Laravel 开发时需要用到的各种软件。")]),e("p",[a._v("Homestead 包含了两个东西：")]),e("ul",[e("li",[a._v("Homestead 管理脚本；")]),e("li",[a._v("Homestead Box 虚拟机盒子。")])]),e("p",[a._v("接下来独自说明下。")]),e("h3",{attrs:{id:"_1-homestead-管理脚本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-homestead-管理脚本","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. Homestead 管理脚本")]),e("p",[a._v("Homestead 脚本使用 Ruby 和 Shell 脚本编写而成。原理是对 Vagrantfile 文件做定制。将从 ~ /Homestead/Homestead.yaml 读取的配置信息，在 provision 时，解析为 Vagrant 命令并进行对虚拟机的配置。Homestead 脚本的作用在于，提供了极其简单易用的接口，使我们只需要通过傻瓜化配置，即可完成复杂的任务。以下是几个常用的任务：")]),e("ul",[e("li",[a._v("IP 配置，端口映射；")]),e("li",[a._v("Nginx Site 创建；")]),e("li",[a._v("数据库创建；")]),e("li",[a._v("主机文件夹挂载到虚拟机等任务。")]),e("li",[a._v("所有 Homestead 的版本历史在 此处 可以找到。在本书中，为了提高操作的效率，我们将会使用定制版本的 Homestead。")])]),e("h3",{attrs:{id:"_2-homestead-box-虚拟机盒子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-homestead-box-虚拟机盒子","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. Homestead Box 虚拟机盒子")]),e("p",[a._v("homestead.box 虚拟机盒子是提前打包好的 Vagrant Box 虚拟机盒子，里面预装了 Nginx Web 服务器、PHP 7、MySQL、Postgres、Redis、Memcached、Node，以及所有你在使用 Laravel 开发时所需要用到的各种软件。")]),e("p",[a._v("所有虚拟机盒子版本历史 "),e("a",{attrs:{href:"https://app.vagrantup.com/laravel/boxes/homestead",target:"_blank",rel:"noopener noreferrer"}},[a._v("在此")]),a._v("。")]),e("p",[a._v("打不开的用户，下图是截屏：")]),e("p",[e("img",{attrs:{src:s(1208),alt:"file"}})]),e("p",[a._v("可以看出 Homestead Box 虚拟机盒子有很多版本。不过，如 Homestead 脚本，为了学习的流畅性，我们接下来将会使用定制版本的虚拟机盒子，你不需要太担心版本的事情。")]),e("h2",{attrs:{id:"安装和使用-homestead"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装和使用-homestead","aria-hidden":"true"}},[a._v("#")]),a._v(" 安装和使用 Homestead")]),e("p",[a._v("接下来，我们会讲解：")]),e("ol",[e("li",[a._v("下载和导入 Homestead Box 虚拟机盒子；")]),e("li",[a._v("安装 Git ，为下载 Homestead 管理脚本做准备；")]),e("li",[a._v("使用 Git 下载 Homestead 管理脚本；")])]),e("h3",{attrs:{id:"_1-下载和导入-homestead-box"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-下载和导入-homestead-box","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. 下载和导入 Homestead Box")]),e("p",[a._v("由于国内的网络环境原因，我们特意为大家定制了适用于国情的 Homestead 安装包，该安装包提供了以下内容：")]),e("ul",[e("li",[a._v("Composer 加速，配置了 Composer 中国全量镜像 支持；")]),e("li",[a._v("默认集成 Heroku 工具；")]),e("li",[a._v("默认集成 Yarn，并为 Yarn 加了淘宝镜像的加速；")]),e("li",[a._v("使用 CNPM 对 NPM 进行加速。")])]),e("p",[a._v("接下来让我们开始进行 Homestead 的安装，首先我们需要下载 "),e("a",{attrs:{href:"http://download.fsdhub.com/lc-homestead-6.1.0-2018061700.zip",target:"_blank",rel:"noopener noreferrer"}},[a._v("Homestead 虚拟机盒子")]),a._v("，建议大家使用迅雷离线下载或者其他离线下载方式下载此盒子。")]),e("p",[a._v("下载后的文件为 "),e("strong",[a._v("lc-homestead-6.1.0-2018061700.zip")]),a._v("，请对其进行 zip 解压操作，解压成功后可以看到目录 "),e("strong",[a._v("lc-homestead-6.1.0-2018061700")]),a._v("，此目录下包含两个文件：")]),e("ul",[e("li",[a._v("virtualbox.box（教程定制化过的 Homestead 盒子）")]),e("li",[a._v("metadata.json（盒子的导入配置文件）")])]),e("p",[a._v("在解压目录中 "),e("strong",[a._v("lc-homestead-6.1.0-2018061700")]),a._v(" 运行以下命令导入 Box：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" vagrant box add metadata.json\n")])]),e("blockquote",[e("p",[a._v("注意：请必须解压到 非中文路径，有同学反馈中文路径会出现不可预知问题。")])]),e("p",[a._v("如下图所示：")]),e("p",[e("img",{attrs:{src:s(1207),alt:"file"}})]),e("blockquote",[e("p",[a._v("如果你使用的 Windows 系统在安装 Homestead 的时候报错：The box 'laravel/homestead' could not be found or\ncould not be accessed in the remote catalog.，请下载 MS Visual C++ 2010 x86 Redistributables 并进行安装即可修复。")])]),e("p",[a._v("至此完成 Homestead Vagrant 盒子的导入。")]),e("blockquote",[e("p",[a._v("注：导入成功后，lc-homestead-6.1.0-2018061700 文件夹可任意删除。")])]),e("h3",{attrs:{id:"_2-安装-git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装-git","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. 安装 Git")]),e("p",[a._v("如果你先前已使用过 "),e("a",{attrs:{href:"https://git-for-windows.github.io/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Git for Windows")]),a._v(" 来作为你进行 Laravel 项目开发时的默认命令行工具，则该工具将会默认为你安装好 Git。")]),e("p",[a._v("使用以下命令来检测是否成功安装：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" --version\n"),e("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" version 2.12.2.windows.2\n")])]),e("p",[e("img",{attrs:{src:s(1206),alt:"file"}})]),e("blockquote",[e("p",[a._v("注：不需要担心你的版本与我不同。")])]),e("h3",{attrs:{id:"_3-下载-homestead-管理脚本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-下载-homestead-管理脚本","aria-hidden":"true"}},[a._v("#")]),a._v(" 3. 下载 Homestead 管理脚本")]),e("p",[a._v("因国内网络限制，为方便下载和后续管理脚本的流畅使用，本书中将使用定制版本的 Homestead 脚本，定制版有以下优势：")]),e("p",[a._v("从国内 coding.net 网站下载，下载速度会比 "),e("a",{attrs:{href:"https://github.com/laravel/homestead",target:"_blank",rel:"noopener noreferrer"}},[a._v("官方")]),a._v(" 更快；\n对脚本进行修改，移除了每一次 provision 时 composer self-update 的卡顿。")]),e("p",[a._v("接下来，使用 Git 下载定制版的 Homestead：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~\n"),e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://git.coding.net/summerblue/homestead.git Homestead\n")])]),e("p",[a._v("Windows 下，"),e("strong",[a._v("~")]),a._v(" 目录代表着 C:\\Users\\ 你的用户名，而 "),e("strong",[a._v("~/Homestead")]),a._v(" 代表着 "),e("strong",[a._v("C:\\Users\\你的用户名\\Homestead")]),a._v("目录，类似：")]),e("p",[e("img",{attrs:{src:s(1205),alt:"file"}})]),e("blockquote",[e("p",[a._v("注：我们把 Homestead 放在 "),e("strong",[a._v("~/Homestead")]),a._v(" 路径下，为方便后面的讲解，请保持一致。")])]),e("p",[a._v("下载完成之后我们使用命令行进入 Homestead 目录，再使用 Git 检出我们需要的 Homestead 版本：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~/Homestead\n"),e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout v7.8.0\n")])]),e("blockquote",[e("p",[a._v("注：为了保证后续讲解的流畅性，请注意版本的一致性，这里我们使用 v7.8.0。")])]),e("p",[a._v("接下来我们需要初始化 Homestead：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{attrs:{class:"token function"}},[a._v("bash")]),a._v(" init.sh\n")])]),e("p",[a._v("运行以上命令后，会在 "),e("strong",[a._v("~/Homestead")]),a._v(" 目录下生成以下三个文件：")]),e("ul",[e("li",[a._v("Homestead.yaml - 主要配置信息文件，我们可以在此文件中配置 Homestead 的站点和数据库等信息；")]),e("li",[a._v("after.sh - 每一次 Homestead 盒子重置后（provision）会调用的 shell 脚本文件；")]),e("li",[a._v("aliases - 每一次 Homestead 盒子重置后（provision），会被替换至虚拟机的 "),e("strong",[a._v("~/.bash_aliases")]),a._v(" 文件中，aliases 里可以放一些快捷命令的定义。")])]),e("p",[a._v("接下来我们将会对 Homestead.yaml 文件的各项配置信息进行详细讲解。")]),e("h2",{attrs:{id:"homestead-yaml-配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#homestead-yaml-配置文件","aria-hidden":"true"}},[a._v("#")]),a._v(" Homestead.yaml 配置文件")]),e("p",[e("strong",[a._v("Homestead.yaml")]),a._v(" 文件在 "),e("strong",[a._v("~/Homestead")]),a._v(" 文件夹里，在 Git-Bash 里，你可以使用以下命令使用文件夹打开当前命令行所在目录：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~/Homestead/\n"),e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" explorer "),e("span",{attrs:{class:"token keyword"}},[a._v(".")]),a._v("\n")])]),e("p",[a._v("可通过运行下面命令快速打开 Homestead.yaml 文件：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" subl ~/Homestead/Homestead.yaml\n")])]),e("blockquote",[e("p",[a._v("为了行文方便，后面如果没有提示的话， "),e("strong",[a._v("Homestead.yaml")]),a._v(" 指的是 "),e("strong",[a._v("~/Homestead/Homestead.yaml")]),a._v(" 文件。")])]),e("p",[a._v("Homestead.yaml里的配置大致可以分为以下几种：")]),e("ol",[e("li",[a._v("虚拟机设置；")]),e("li",[a._v("SSH 秘钥登录配置；")]),e("li",[a._v("共享文件夹配置；")]),e("li",[a._v("站点配置；")]),e("li",[a._v("数据库配置；")]),e("li",[a._v("自定义变量；")])]),e("p",[a._v("接下来我们逐个讲解。")]),e("h3",{attrs:{id:"_1-虚拟机设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-虚拟机设置","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. 虚拟机设置")]),e("p",[a._v("Homestead 支持我们对虚拟机的 IP，内存，CPU，虚拟机的默认提供者进行配置。这里我们基本不需要做任何配置，因此可以跳过。")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("ip: "),e("span",{attrs:{class:"token string"}},[a._v('"192.168.10.10"')]),a._v("\nmemory: 2048\ncpus: 1\nprovider: virtualbox\n")])]),e("h3",{attrs:{id:"_2-ssh-秘钥登录配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-ssh-秘钥登录配置","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. SSH 秘钥登录配置")]),e("p",[a._v("authorize 选项是指派登录虚拟机授权连接的公钥文件，此文件填写的是主机上的公钥文件地址，虚拟机初始化时，此文件里的内容会被复制存储到虚拟机的 "),e("strong",[a._v("/home/vagrant/.ssh/authorized_keys")]),a._v("文件中，从而实现 SSH 免密码登录。在这里我们默认填写即可。")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("authorize: ~/.ssh/id_rsa.pub\n")])]),e("p",[a._v("keys 是数组选项，填写的是本机的 SSH 私钥文件地址。虚拟机初始化时，会将此处填写的所有 SSH 私钥文件复制到虚拟机的 /home/vagrant/.ssh/ 文件夹中，从而使虚拟机能共享主机上的 SSH 私钥文件，使虚拟机具备等同于主机的身份认证。此功能为 SSH 授权提供了便利，例如在后面章节中，我们只需要在 GitHub 上配置一个 SSH 公钥，即可实现 GitHub 对虚拟机和主机共同认证。")]),e("p",[a._v("此处我们将公钥和私钥一起同步到虚拟机中：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("keys:\n    - ~/.ssh/id_rsa\n    - ~/.ssh/id_rsa.pub\n")])]),e("p",[a._v("接下来我们来生成 SSH Key，开始之前，我们先使用以下命令来检查主机上是否已经生成过 SSH Key：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{attrs:{class:"token function"}},[a._v("ls")]),a._v(" -al ~/.ssh\n")])]),e("p",[a._v("如果存在 id_rsa 和 id_rsa.pub的话，请跳过以下生成 SSH 的步骤继续阅读剩下内容。")]),e("p",[a._v("否则使用以下方法来生成 SSH Key，请将 your_email@example.com 替换为你的邮箱：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" ssh-keygen -t rsa -C "),e("span",{attrs:{class:"token string"}},[a._v('"your_email@example.com"')]),a._v("\nGenerating public/private rsa key pair.\n")])]),e("p",[a._v("命令行会提示让你指定秘钥的名称，按回车键将 SSH Key 保存到默认文件名即可：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("Enter a "),e("span",{attrs:{class:"token function"}},[a._v("file")]),a._v(" "),e("span",{attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),e("span",{attrs:{class:"token function"}},[a._v("which")]),a._v(" to save the key "),e("span",{attrs:{class:"token punctuation"}},[a._v("(")]),a._v("/Users/you/.ssh/id_rsa"),e("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v(": "),e("span",{attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Press enter"),e("span",{attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])]),e("p",[a._v("接下来会询问你为 SSH Key 设置密码，按回车键即可，默认为空密码：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("Enter passphrase "),e("span",{attrs:{class:"token punctuation"}},[a._v("(")]),a._v("empty "),e("span",{attrs:{class:"token keyword"}},[a._v("for")]),a._v(" no passphrase"),e("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v(": "),e("span",{attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Type a passphrase"),e("span",{attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\nEnter same passphrase again: "),e("span",{attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Type passphrase again"),e("span",{attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])]),e("p",[a._v("可以都选择默认，一路 Enter 键即可，大致如下：")]),e("p",[e("img",{attrs:{src:s(1204),alt:"file"}})]),e("p",[a._v("这个时候如果我们再使用：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{attrs:{class:"token function"}},[a._v("ls")]),a._v(" -al ~/.ssh\n")])]),e("p",[a._v("查看的话，会出现：")]),e("p",[e("img",{attrs:{src:s(1203),alt:"file"}})]),e("p",[a._v("SSH 秘钥的两个文件：")]),e("ul",[e("li",[a._v("id_rsa —— SSH 秘钥的 私钥 (Private Key)")]),e("li",[a._v("id_rsa.pub —— SSH 秘钥的 公钥 (Public Key)")])]),e("h3",{attrs:{id:"_3-共享文件夹配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-共享文件夹配置","aria-hidden":"true"}},[a._v("#")]),a._v(" 3. 共享文件夹配置")]),e("p",[a._v("我们可以通过 folders 来指明本机要映射到 Homestead 虚拟机上的文件夹。")]),e("ul",[e("li",[a._v("map 对应的是我们本机的文件夹，格式例如：E：/Homestead/Code，以开发者实际项目目录为准。")]),e("li",[a._v("to 对应的是 Homestead 上的文件夹。")])]),e("p",[a._v("为了后续课程讲解，请统一配置如下：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("folders:\n    - map: ~/Code\n      to: /home/vagrant/Code\n")])]),e("p",[a._v("默认 Homestead 会将我们本机的 ~/Code 文件夹映射到 /home/vagrant/Code 文件夹上。现在我们本机还没有 ~/Code 文件夹，让我们来创建一个：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~\n"),e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" Code\n")])]),e("p",[a._v("执行成功后，同样的，我们可以通过 explorer . 命令在文件夹中打开此目录：")]),e("p",[e("img",{attrs:{src:s(1202),alt:"file"}})]),e("p",[a._v("在后面的章节中，我们将会在该文件夹下放置我们所有的 Laravel 项目，Homestead 会把该文件夹下的项目自动映射到虚拟机的 /home/vagrant/Code 文件夹上。")]),e("h3",{attrs:{id:"_4-站点配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-站点配置","aria-hidden":"true"}},[a._v("#")]),a._v(" 4. 站点配置")]),e("p",[a._v("站点配置允许你在主机里，通过域名来访问虚拟机里的 Laravel 应用。如下面 sites 配置所示，将 homestead.test 映射到一个 Laravel 项目的 public 目录上。这一行配置，会命令 Homestead 为我们新建一个 Nginx 站点，并且把 Web Root 配置到指定目录下。Laravel 应用的 Nginx 站点 Web Root 配置，默认就是在根目录下的 public 目录。")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("sites:\n    - map: homestead.test\n      to: /home/vagrant/Code/Laravel/public\n")])]),e("p",[a._v("目前 Laravel 项目并不存在。这里先统一配置为以上，请不用着急，在后续的章节中，我们会创建该 Laravel 项目。")]),e("p",[a._v("另外，主机里直接访问虚拟机站点，必须通过绑定 hosts 来实现。接下来我们利用 hosts 文件绑定 homestead.test 到虚拟机 IP 192.168.10.10 上。hosts 文件的完整路径为 C:\\Windows\\System32\\Drivers\\etc\\hosts，可使用下面命令打开：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" subl C:/Windows/System32/Drivers/etc/hosts\n")])]),e("blockquote",[e("p",[a._v("如果你没有集成 subl 命令的话， 请使用编辑器直接打开文件，文件路径在 C:\\Windows\\System32\\Drivers\\etc\\hosts 。")])]),e("p",[a._v("在 hosts 文件的最后面加入以下一行：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("192.168.10.10  homestead.test\n")])]),e("p",[a._v("至此站点就配置好了，等我们在后面章节创建 Laravel 项目后，即可通过浏览器访问 homestead.test 站点。")]),e("h3",{attrs:{id:"_5-数据库配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-数据库配置","aria-hidden":"true"}},[a._v("#")]),a._v(" 5. 数据库配置")]),e("p",[a._v("我们可以为 Homestead 指定数据库名称，这里使用默认设置即可。")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("databases:\n    - homestead\n")])]),e("h3",{attrs:{id:"_6-自定义变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-自定义变量","aria-hidden":"true"}},[a._v("#")]),a._v(" 6. 自定义变量")]),e("p",[a._v("最后，如果你需要自定义一些在虚拟机上可以使用的自定义变量，则可以在 variables 中进行定义。")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("variables:\n    - key: APP_ENV\n      value: local\n")])]),e("p",[a._v("Homestead 自定义变量在本书中并未使用，知悉有此功能即可。")]),e("h2",{attrs:{id:"运行-vagrant"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行-vagrant","aria-hidden":"true"}},[a._v("#")]),a._v(" 运行 Vagrant")]),e("p",[a._v("完成了 Homestead 的配置，接下来我们要开始启动虚拟机了。")]),e("p",[a._v("在命令中输入 vagrant，能看到 Vagrant 为我们提供了一些便利的命令行，下面简单介绍一下 Vagrant 常用的一些命令行的使用：")]),e("p",[a._v("命令行 说明")]),e("ul",[e("li",[a._v("vagrant init    初始化 vagrant")]),e("li",[a._v("vagrant up  启动 vagrant")]),e("li",[a._v("vagrant halt    关闭 vagrant")]),e("li",[a._v("vagrant ssh 通过 SSH 登录 vagrant（需要先启动 vagrant）")]),e("li",[a._v("vagrant provision   重新应用更改 vagrant 配置")]),e("li",[a._v("vagrant destroy 删除 vagrant")])]),e("p",[a._v("让我们开始启动 Homestead：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~/Homestead "),e("span",{attrs:{class:"token operator"}},[a._v("&&")]),a._v(" vagrant up\n")])]),e("p",[a._v("第一次启动时，Vagrant 会做以下这几件事情：")]),e("ul",[e("li",[a._v("以导入的 Homestead 虚拟机盒子为模板，新建一台虚拟机；")]),e("li",[a._v("并按照 Homestead.yaml 里的配置信息，对这台新建的虚拟机进行配置；")]),e("li",[a._v("配置完成后启动虚拟机。")])]),e("p",[a._v("成功启动后，还是在 ~ /Homestead 目录中，通过以下命令来 SSH 登录 Homestead 虚拟机中：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" vagrant "),e("span",{attrs:{class:"token function"}},[a._v("ssh")]),a._v("\n")])]),e("p",[a._v("在我们登录成功后，你能看到类似于如下图的界面，现在我们在该终端界面中输入的所有命令都将运行在 Homestead 虚拟机上。")]),e("p",[e("img",{attrs:{src:s(1201),alt:"file"}})]),e("p",[a._v("在虚拟机界面下可以输入退出虚拟机：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ "),e("span",{attrs:{class:"token keyword"}},[a._v("exit")]),a._v("\n")])]),e("p",[a._v("最后尝试关闭 Homestead：")]),e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" vagrant halt\n")])])])}],r=s(0),o=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},e,!1,null,null,null);t.default=o.exports}}]);