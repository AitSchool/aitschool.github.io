(window.webpackJsonp=window.webpackJsonp||[]).push([[449],{1189:function(t,a,s){t.exports=s.p+"assets/img/1.2_1.effba5f8.png"},1609:function(t,a,s){"use strict";s.r(a);var n=[function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"_1-2-静态页面"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-静态页面","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.2 静态页面")]),n("p",[t._v("在进行完项目的基本配置之后，我们要开始正式进行项目开发了。本节将通过三个基本静态页面的构建，来让你了解 Laravel 最基本的页面构建流程。")]),n("h2",{attrs:{id:"移除无用视图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#移除无用视图","aria-hidden":"true"}},[t._v("#")]),t._v(" 移除无用视图")]),n("p",[t._v("Laravel 默认会为我们生成一个 "),n("code",[t._v("welcome.blade.php")]),t._v(" 视图文件，主要用于对默认页面进行渲染，这个文件对我们接下来的项目开发没有一点用处，因此我们可将其移除：")]),n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ "),n("span",{attrs:{class:"token function"}},[t._v("rm")]),t._v(" resources/views/welcome.blade.php\n")])]),n("h2",{attrs:{id:"配置路由"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置路由","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置路由")]),n("p",[t._v("当用户在查看一个网页时，一个完整的访问过程如下：")]),n("ol",[n("li",[t._v("打开浏览器在地址栏输入 URL 并访问；")]),n("li",[t._v("路由将 URL 请求映射到指定控制器上；")]),n("li",[t._v("控制器收到请求，开始进行处理。如果视图需要动态数据进行渲染，则控制器会开始从模型中读取数据；")]),n("li",[t._v("数据读取完毕，将数据传送给视图进行渲染；")]),n("li",[t._v("视图渲染完成，在浏览器上呈现出完整页面；")])]),n("p",[t._v("如下图：")]),n("p",[n("img",{attrs:{src:s(1189),alt:"file"}})]),n("p",[t._v("在 Laravel 开发中，我们使用路由来定义 URL 和 URL 的请求方式，再将该 URL 分配到相对应的控制器动作中进行处理。接下来要构建三个静态页面分别是主页、帮助页、关于页。因此我们需要为路由指定好三个不同的 URL：")]),n("p",[n("em",[t._v("routes/web.php")])]),n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{attrs:{class:"token php language-php"}},[n("span",{attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\nRoute"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("get")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'/'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'StaticPagesController@home'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nRoute"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("get")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'/help'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'StaticPagesController@help'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nRoute"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("get")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'/about'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'StaticPagesController@about'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("在上面代码的代码中，我们为 get 方法传递了两个参数，第一个参数指明了 URL，第二个参数指明了处理该 URL 的控制器动作。get 表明这个路由将会响应 GET 请求，并将请求映射到指定的控制器动作上。比方说，我们向 http://laravel-weibo.tv 发出了一个请求，则该请求将会由 "),n("code",[t._v("StaticPagesController")]),t._v(" 的 "),n("code",[t._v("home")]),t._v(" 方法进行处理。我们将在下节创建 "),n("code",[t._v("StaticPagesController")]),t._v("，为你讲解控制器在收到请求后如何进行相关操作。")]),n("p",[t._v("在 Laravel 中我们较为常用的几个基本的 HTTP 操作分别为 GET、POST、PATCH、DELETE。")]),n("ul",[n("li",[t._v("GET 常用于页面读取")]),n("li",[t._v("POST 常用于数据提交")]),n("li",[t._v("PATCH 常用于数据更新")]),n("li",[t._v("DELETE 常用于数据删除")])]),n("p",[t._v("在这四个动作中，PATCH 和 DELETE 是不被浏览器所支持的，但我们可以通过在提交中表单中做一些手脚，让服务器以为这两个动作是从浏览器中发出的一样，后面我会具体讲解如何在表单中通过添加隐藏域的方式来欺骗服务器。这里你只需要有个大概的印象即可。")]),n("h2",{attrs:{id:"生成静态页面控制器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生成静态页面控制器","aria-hidden":"true"}},[t._v("#")]),t._v(" 生成静态页面控制器")]),n("p",[t._v("要让静态页面在网站上进行展示，我们需要先创建一个 "),n("code",[t._v("StaticPagesController")]),t._v(" 控制器，这个控制器将负责整个网站静态页面的处理。Laravel 的控制器命名规范统一使用 "),n("a",{attrs:{href:"http://baike.baidu.com/view/2359058.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("驼峰式大小写")]),t._v(" 和复数形式来命名，在这里我们也应该这么做。一般情况下，我们会使用下面命令来生成静态页面控制器：")]),n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ php artisan make:controller StaticPagesController\n")])]),n("p",[t._v("让我们来看下 "),n("code",[t._v("StaticPagesController")]),t._v(" 文件生成的默认代码：")]),n("p",[n("em",[t._v("app/Http/Controllers/StaticPagesController.php")])]),n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("\n"),n("span",{attrs:{class:"token php language-php"}},[n("span",{attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),n("span",{attrs:{class:"token package"}},[t._v("App"),n("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Http"),n("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Controllers")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{attrs:{class:"token package"}},[t._v("Illuminate"),n("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Http"),n("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Request")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("StaticPagesController")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Controller")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),n("p",[n("code",[t._v("namespace")]),t._v(" 代表的是 "),n("a",{attrs:{href:"http://baike.baidu.com/view/94233.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("命名空间")]),t._v("，这是在 PHP 5.3 之后才加入的语言特性，如果你之前学习过 Java 或 C# 的话，那么你应该对命名空间不陌生。简单来说，开发者可以利用命名空间来区分归类不同的代码功能，避免引起变量名或函数名的冲突。你可以把命名空间理解为文件路径，把变量名理解为文件。当我们在不同路径分别存放了相同的文件时，系统就不会出现冲突。")]),n("p",[t._v("我们用 "),n("code",[t._v("use")]),t._v(" 来引用在 PHP 文件中要使用的类，引用之后便可以对其进行调用。")]),n("p",[t._v("最后我们看到，在静态页面控制器中还定义了一个 "),n("code",[t._v("StaticPagesController")]),t._v(" 类，这个类继承了父类 "),n("code",[t._v("App\\Http\\Controllers\\Controller")]),t._v("，这意味着你可以在 "),n("code",[t._v("StaticPagesController")]),t._v(" 类中任意使用父类中除私密方法外的其它方法。")]),n("p",[t._v("现在的静态页面控制器中还没有指定好三个页面对应的动作，让我们来为控制器加上这三个动作来处理从路由发过来的请求：")]),n("p",[n("em",[t._v("app/Http/Controllers/StaticPagesController.php")])]),n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{attrs:{class:"token php language-php"}},[n("span",{attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),n("span",{attrs:{class:"token package"}},[t._v("App"),n("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Http"),n("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Controllers")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{attrs:{class:"token package"}},[t._v("Illuminate"),n("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Http"),n("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Request")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("StaticPagesController")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Controller")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("home")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'主页'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("help")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'帮助页'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("about")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'关于页'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在 "),n("code",[t._v("StaticPagesController")]),t._v(" 类中，我们新定义了三个方法，这三个方法在接受到路由发过来的请求时，将会返回各自页面的名称，这三个方法名称与路由上的定义一一对应。现在：")]),n("ul",[n("li",[t._v('访问 http://laravel-weibo/ 你将看到有 "主页" 二字输出')]),n("li",[t._v('访问 http://laravel-weibo/help 页面，则会看到 "帮助页"')]),n("li",[t._v('访问 http://laravel-weibo/about 页面，则会看到 "关于页"')])]),n("p",[t._v("这三个方法返回的只是纯文本内容，算不上真正的视图，接下来我们再来添加并渲染真正的视图。")]),n("h2",{attrs:{id:"添加静态页面视图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#添加静态页面视图","aria-hidden":"true"}},[t._v("#")]),t._v(" 添加静态页面视图")]),n("p",[t._v("要在控制器中指定渲染某个视图，则需要使用到 "),n("code",[t._v("view")]),t._v(" 方法，"),n("code",[t._v("view")]),t._v(" 方法接收两个参数，第一个参数是视图的路径名称，第二个参数是与视图绑定的数据，第二个参数为可选参数。本章节讲的是静态页面的构建，因此并不需要利用到第二个参数，在后面的教程中我们会再讲解如何为视图绑定数据，并在视图中使用绑定的数据。")]),n("p",[n("code",[t._v("view")]),t._v(" 方法在控制器的应用如下：")]),n("p",[n("em",[t._v("app/Http/Controllers/StaticPagesController.php")])]),n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{attrs:{class:"token php language-php"}},[n("span",{attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),n("span",{attrs:{class:"token package"}},[t._v("App"),n("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Http"),n("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Controllers")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{attrs:{class:"token package"}},[t._v("Illuminate"),n("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Http"),n("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Request")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("StaticPagesController")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Controller")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("home")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("view")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'static_pages/home'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("help")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("view")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'static_pages/help'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("about")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("view")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'static_pages/about'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("下面这行代码，将会渲染在 "),n("code",[t._v("resources/views")]),t._v(" 文件夹下的 "),n("code",[t._v("static_pages/home.blade.php")]),t._v(" 文件。默认情况下，所有的视图文件都存放在 "),n("code",[t._v("resources/views")]),t._v(" 文件夹下。")]),n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("view")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'static_pages/home'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),n("p",[t._v("在控制器中指定渲染的视图之后，接下来便是对视图进行构建了，我们需要在 "),n("code",[t._v("resources/views")]),t._v(" 中新增下面三个视图。")]),n("p",[n("em",[t._v("resources/views/static_pages/home.blade.php")])]),n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{attrs:{class:"token doctype"}},[t._v("<!DOCTYPE html>")]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Laravel weibo App"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("主页"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),n("p",[n("em",[t._v("resources/views/static_pages/help.blade.php")])]),n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{attrs:{class:"token doctype"}},[t._v("<!DOCTYPE html>")]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Laravel weibo App"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("帮助页"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),n("p",[n("em",[t._v("resources/views/static_pages/about.blade.php")])]),n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{attrs:{class:"token doctype"}},[t._v("<!DOCTYPE html>")]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Laravel weibo App"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("关于页"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),n("h2",{attrs:{id:"blade-模板"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#blade-模板","aria-hidden":"true"}},[t._v("#")]),t._v(" Blade 模板")]),n("p",[t._v("细心的你可能会留意到这三个文件的后缀名均为 "),n("code",[t._v(".blade.php")]),t._v("，而不是 "),n("code",[t._v(".php")]),t._v("。这是因为 Blade 是 Laravel 中提供的一套模板引擎，在 Blade 视图中我们可以使用 Laravel 为这套引擎定义的一些默认方法，并完全兼容 PHP 语法的书写。在项目运行时，Laravel 会把所有的 Blade 视图进行编译缓存成普通的 PHP 代码，因此你不必担心 Blade 会对应用产生负担。")]),n("p",[t._v("现在所有视图已经创建完毕，访问对应的 URL 地址便能看到视图被成功渲染。")]),n("h2",{attrs:{id:"使用通用视图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用通用视图","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用通用视图")]),n("p",[t._v("你可能已经注意到了，前面我们创建的几个视图里面包含着一些重复的代码，这明显违反了 DRY（Don't repeat yourself）原则，导致代码变得不够灵活、简洁。因此我们需要对页面进行重构，把多余的代码从视图中抽离出来，单独创建一个默认视图来进行存放通用代码。")]),n("p",[t._v("我们给应用创建了一个 default 视图，并将其放在 "),n("code",[t._v("layouts")]),t._v(" 文件夹中，default 视图将作为整个应用的基础视图。实际上你只要保证视图文件被放置在 "),n("code",[t._v("resources/views")]),t._v(" 目录下即可，Laravel 对视图的文件夹和文件命名并没有限制，我将 default 文件放在 "),n("code",[t._v("layouts")]),t._v(" 文件下，只是为了让应用的目录结构让人更好理解。")]),n("p",[n("em",[t._v("resources/views/layouts/default.blade.php")])]),n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{attrs:{class:"token doctype"}},[t._v("<!DOCTYPE html>")]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Laravel weibo App"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    @yield('content')\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),n("p",[t._v("下面的这行代码表示该占位区域将用于显示 "),n("code",[t._v("content")]),t._v(" 区块的内容，而 "),n("code",[t._v("content")]),t._v(" 区块的内容将由继承自 default 视图的子视图定义。")]),n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("@yield"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'content'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),n("p",[t._v("Laravel 的 Blade 模板支持继承，这意味多个子视图可以共用父视图提供的视图模板。接下来让我们修改之前创建的首页视图文件，来学习下如何使用 Blade 模板的继承。")]),n("p",[n("em",[t._v("resources/views/static_pages/home.blade.php")])]),n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[t._v("@extends('layouts.default')\n@section('content')\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("主页"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n@stop\n")])]),n("p",[t._v("我们使用了 "),n("code",[t._v("@extends")]),t._v(" 并通过传参来继承父视图 "),n("code",[t._v("layouts/default.blade.php")]),t._v(" 的视图模板。")]),n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("@extends('layouts.default')\n")])]),n("p",[t._v("使用 "),n("code",[t._v("@section")]),t._v(" 和 "),n("code",[t._v("@stop")]),t._v(" 代码来填充父视图的 "),n("code",[t._v("content")]),t._v(" 区块，所有包含在 "),n("code",[t._v("@section")]),t._v(" 和 "),n("code",[t._v("@stop")]),t._v(" 中的代码都将被插入到父视图的 "),n("code",[t._v("content")]),t._v(" 区块。")]),n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("@section('content')\n  <h1>主页</h1>\n@stop\n")])]),n("p",[t._v("在 Laravel 对 "),n("code",[t._v("home.blade.php")]),t._v(" 文件进行编译后，结果如下：")]),n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{attrs:{class:"token doctype"}},[t._v("<!DOCTYPE html>")]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),n("span",{attrs:{class:"token attr-name"}},[t._v("charset")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("utf-8"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Laravel weibo App"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("主页"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])]),n("p",[t._v("由此可见 Blade 模板继承有多方便。接下来让我们对其它两个视图也进行更改，统一使用父视图的代码。")]),n("p",[n("em",[t._v("resources/views/static_pages/help.blade.php")])]),n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[t._v("@extends('layouts.default')\n@section('content')\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("帮助页"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n@stop\n")])]),n("p",[n("em",[t._v("resources/views/static_pages/about.blade.php")])]),n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[t._v("@extends('layouts.default')\n@section('content')\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("关于页"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n@stop\n")])]),n("p",[t._v("修改完成之后，再次在网页上访问这几个静态页面，你会发现父视图的代码已被成功嵌入到子视图中。")]),n("p",[t._v("现在还有一点不足的地方，就是所有的网站标题名字都为 Laravel webo App。我们接下来要做的就是针对页面标题进行优化，让不同页面显示不同的标题。")]),n("p",[t._v("首先我们要修改默认视图文件，在代码显示标题的位置嵌入 "),n("code",[t._v("@yield")]),t._v(" 区块：")]),n("p",[n("em",[t._v("resources/views/layouts/default.blade.php")])]),n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{attrs:{class:"token doctype"}},[t._v("<!DOCTYPE html>")]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("@yield('title', 'Laravel weibo App')"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    @yield('content')\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),n("p",[t._v("我们给 "),n("code",[t._v("@yield")]),t._v(" 传了两个参数，第一个参数是该区块的变量名称，第二个参数是默认值，表示当指定变量的值为空值时，使用 "),n("code",[t._v("laravel weibo App")]),t._v(" 来作为默认值。")]),n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("@yield('title', 'Laravel weibo App')"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),n("p",[t._v("下面让我们来为帮助页和关于页加上指定标题。")]),n("p",[n("em",[t._v("resources/views/static_pages/help.blade.php")])]),n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[t._v("@extends('layouts.default')\n@section('title', '帮助')\n\n@section('content')\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("帮助页"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n@stop\n")])]),n("p",[n("em",[t._v("resources/views/static_pages/about.blade.php")])]),n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[t._v("@extends('layouts.default')\n@section('title', '关于')\n\n@section('content')\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("关于页"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n@stop\n")])]),n("p",[t._v("注意的是，当 "),n("code",[t._v("@section")]),t._v(" 传递了第二个参数时，便不需要再通过 "),n("code",[t._v("@stop")]),t._v(" 标识来告诉 Laravel 填充区块会在具体哪个位置结束。")]),n("p",[t._v("我们也可以在 "),n("code",[t._v("@yield")]),t._v(" 区块后面进行内容拼接。让我们标题拥有更加丰富的信息。")]),n("p",[n("em",[t._v("resources/views/layouts/default.blade.php")])]),n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{attrs:{class:"token doctype"}},[t._v("<!DOCTYPE html>")]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("@yield('title', 'Laravel weibo App') - Laravel 新手入门教程"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    @yield('content')\n  "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),n("p",[t._v("现在到浏览器重新刷新下页面，应该能看到标题后面成功拼接上我们定义的内容了。")])])}],e=s(0),o=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},n,!1,null,null,null);a.default=o.exports}}]);