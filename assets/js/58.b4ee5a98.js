(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{1598:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"依赖追踪器使用实践"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#依赖追踪器使用实践","aria-hidden":"true"}},[t._v("#")]),t._v(" 依赖追踪器使用实践")]),n("ul",[n("li",[t._v("Computed API 设计与使用")]),n("li",[t._v("实例演示")])]),n("h2",{attrs:{id:"computed-api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#computed-api","aria-hidden":"true"}},[t._v("#")]),t._v(" Computed API")]),n("ol",[n("li",[t._v("computed 初次求值（被 get）时，将全局变量 Dep.target 标记为自身")]),n("li",[t._v("在该 getter 中使用 computed 函数计算 value")]),n("li",[t._v("computed 函数中包含了对各 reactive 的引用")]),n("li",[t._v("在该 computed 中对 reactive 求值（触发 getter）时，各 reactive 收集当前 Dep.target 至自身的 deps 数组。computed 求值完成后，所有它所依赖的 reactive 均完成对该 computed 的依赖收集")]),n("li",[t._v("求值完成后，computed 将 Dep.target 标记为空，返回求值结果作为 computed 的值")]),n("li",[t._v("下次 reactive 更新时，所有依赖它的 computed 在该 reactive 的 setter 中一并更新")])]),n("h2",{attrs:{id:"实例演示"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实例演示","aria-hidden":"true"}},[t._v("#")]),t._v(" 实例演示")]),n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("/**\n * computed 实现机制\n * 1. computed 初次求值（被 get）时，将全局变量 Dep 标记为自身\n * 2. 在该 getter 中使用 computed 函数计算 value\n * 3. computed 函数中包含了对各 reactive 的引用\n * 4. 在该 computed 中对 reactive 求值（触发 getter）时，各 reactive 收集当前 Dep 至自身的 deps 数组。computed 求值完成后，所有它所依赖的 reactive 均完成对该 computed 的依赖收集\n * 6. 求值完成后，computed 将 Dep 标记为空，返回求值结果作为 computed 的值\n * 7. 下次 reactive 更新时，所有依赖它的 computed 在该 reactive 的 setter 中一并更新\n */")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 标记当前依赖的全局单例")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 由 computed 的 getter 触发时设入该值")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 在 computed 求值期间，computed 依赖的 reactive 通过该值收集该 computed 至其依赖中")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 当 computed 求值完成后再将此值置空")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" Dep "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 通过设置 getter 与 setter 定义 computed")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// computeFn 为通过 reactive 求值出 computed 的求值函数")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// updateCallback 为 computed 更新时触发的回调")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("defineComputed")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" computeFn"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" updateCallback"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// 封装供 reactive 收集的更新回调")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// 用于触发 computed 的更新事件")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{attrs:{class:"token function-variable function"}},[t._v("onDependencyUpdated")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 在此计算出的值没有用于更新 computed")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 而是用于触发 computed 的更新事件")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 供后续可能的 watch 等模块使用")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" value "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("computeFn")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{attrs:{class:"token function"}},[t._v("updateCallback")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  Object"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("defineProperty")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{attrs:{class:"token comment"}},[t._v("// 标记当前依赖，供 reactive 收集")]),t._v("\n      Dep "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" onDependencyUpdated\n      "),n("span",{attrs:{class:"token comment"}},[t._v("// 在 computeFn 中对 reactive 求值时")]),t._v("\n      "),n("span",{attrs:{class:"token comment"}},[t._v("// 由 reactive 的 setter 收集当前 computed 依赖")]),t._v("\n      "),n("span",{attrs:{class:"token comment"}},[t._v("// 故完成对 computed 的初次求值时，即完成了 reactive 的依赖收集")]),t._v("\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" value "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("computeFn")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{attrs:{class:"token comment"}},[t._v("// 完成求值后，清空标记")]),t._v("\n      Dep "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n      "),n("span",{attrs:{class:"token comment"}},[t._v("// 最终返回的 getter 结果")]),t._v("\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 计算属性无法 set")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 通过 getter 与 setter 定义出一个 reactive")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("defineReactive")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("null")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// 在此标记哪些 computed 依赖了该 reactive")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" deps "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n  Object"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("defineProperty")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 为 reactive 求值时，收集其依赖")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Dep"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" deps"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("push")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Dep"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{attrs:{class:"token comment"}},[t._v("// 返回 val 值作为 getter 求值结果")]),t._v("\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 为 reactive 赋值时，更新所有依赖它的计算属性")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newValue"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{attrs:{class:"token comment"}},[t._v("// 在 setter 中更新值")]),t._v("\n      val "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" newValue\n      "),n("span",{attrs:{class:"token comment"}},[t._v("// 更新值后触发所有 computed 依赖更新")]),t._v("\n      deps"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("forEach")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("changeFn "),n("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("changeFn")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" elder "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("defineReactive")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elder"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'now'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token function"}},[t._v("defineComputed")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elder"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'age'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" elder"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("now "),n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1926")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'Now his age is'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" elder"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nelder"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("now "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("2016")]),t._v("\nconsole"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elder"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nelder"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("now "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("2017")]),t._v("\nconsole"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elder"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])}],!1,null,null,null);s.default=e.exports}}]);