(window.webpackJsonp=window.webpackJsonp||[]).push([[496],{1680:function(t,a,s){"use strict";s.r(a);var e=s(0),r=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git","aria-hidden":"true"}},[t._v("#")]),t._v(" Git")]),s("p",[t._v("什么是 Git？")]),s("p",[t._v("Git 是 Linux 的创始人 Linus Torvalds 开源的一款分布式版本控制系统，以帮助开发者更好的对项目进行版本管理。每一个优秀的开发者在进行项目开发时都会第一时间给自己的项目加上 Git，以便能更好的追踪代码修改，进行版本回溯等操作。在多人协作的开发过程中，Git 更是必不可少的。因此，本书中将使用 Git 来管理项目的所有代码，让你在阅读本书的时候能够体会到 Git 的强大，了解实际开发中我们对 Git 的应用。")]),s("p",[t._v("在现代化的项目开发中，Git 基本上是标配。")]),s("h3",{attrs:{id:"git-安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-安装","aria-hidden":"true"}},[t._v("#")]),t._v(" Git 安装")]),s("p",[t._v("Git 是一个版本控制系统，也可以理解为一个工具，跟 Java 类似，使用之前必须先进行下载安装， Mac 笔记本上其实系统自带了 Git ，不过这里统一提供各平台的安装方式，这部分就不过多介绍，相信大家可以搞定。")]),s("ul",[s("li",[t._v("win 用户下载 "),s("a",{attrs:{href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git")]),t._v(" 及 Gitbash(在按照Git中包含)")]),s("li",[t._v("Mac 用户下载 xcode 及 "),s("a",{attrs:{href:"(https://www.iterm2.com/index.html)"}},[t._v("item")])]),s("li",[t._v("Linux：apt-get install git")])]),s("h3",{attrs:{id:"git-的基本设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-的基本设置","aria-hidden":"true"}},[t._v("#")]),t._v(" Git 的基本设置")]),s("p",[t._v("在前面的章节中，我们为主机安装好了 Git。虚拟机 Homestead 中 Git 也是作为默认安装的软件。接下来大部分的 Git 操作都会发生在 Homestead 虚拟机中，因此我们需要先对其进行设置。")]),s("p",[t._v("首先我们对 Git 进行用户名和邮箱进行设置，请参照下面格式，替换为你自己常用的用户名和邮箱来完成设置：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),s("span",{attrs:{class:"token string"}},[t._v('"Your Name"')]),t._v("\n$ "),s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email your@example.com\n")])]),s("blockquote",[s("p",[t._v("解释： "),s("code",[t._v("--global")]),t._v(" 选项代表对 Git 进行全局设置。")])]),s("p",[t._v("这里个人信息设置的作用，是为你在代码提交时自动署名标记，方便查看提交日志时区分作者。如：")]),s("p",[s("img",{attrs:{src:"https://fsdhubcdn.phphub.org/uploads/images/201705/12/1/BHDY40RTAk.png",alt:"file"}})]),s("p",[t._v("接下来设置 Git 推送分支时相关配置：")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global push.default simple\n")])]),s("p",[t._v("此设置是 Git 命令 push 的默认模式为 "),s("code",[t._v("simple")]),t._v("，当我们执行 "),s("code",[t._v("git push")]),t._v(" 没有指定分支时，自动使用当前分支，而不是报错。")]),s("h3",{attrs:{id:"git-初体验"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-初体验","aria-hidden":"true"}},[t._v("#")]),t._v(" Git 初体验")]),s("h4",{attrs:{id:"_1-查看-git-版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-查看-git-版本","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 查看 Git 版本")]),s("p",[t._v("按照完毕后打开终端输入 "),s("strong",[t._v("git version")]),t._v(" 查看当前 Git 版本，查看到版本号为按照成功")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" version\n"),s("span",{attrs:{class:"token operator"}},[t._v(">>")]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" version 2.15.1 "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Apple Git-101"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("h4",{attrs:{id:"_2-终端进入桌面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-终端进入桌面","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 终端进入桌面")]),s("p",[t._v("在当前终端中打开为 用户当前路径，桌面文件夹一般处于用户之中。我们可以通过命令 "),s("strong",[t._v("cd")]),t._v(" 进入到桌面，通过 "),s("strong",[t._v("ls")]),t._v(" 查看我们桌面的内容。")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[t._v("cd")]),t._v(" Desktop\n")])]),s("blockquote",[s("p",[t._v("注意，一定要通过 "),s("strong",[t._v("ls")]),t._v(" 命令看看当前是否在桌面，看看终端打印出来的文件和文件夹是否与你当前桌面相同")])]),s("h4",{attrs:{id:"_4-新建代码仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-新建代码仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 新建代码仓库")]),s("p",[t._v("新建代码仓库（ 标注 Initialize this repository with a README ）")]),s("h4",{attrs:{id:"_5-克隆-github-的仓库代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-克隆-github-的仓库代码","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. 克隆 Github 的仓库代码")]),s("p",[t._v("在上述之前我们创建了仓库，然后进入仓库页面点击 Download or Clone 按钮，获取仓库的 URL 地址")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/username/repository.git\n")])]),s("h4",{attrs:{id:"_6-使用编辑器修改一下文件，终端进入代码仓库，然后通过-git-add-命令把修改添加进缓存区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-使用编辑器修改一下文件，终端进入代码仓库，然后通过-git-add-命令把修改添加进缓存区","aria-hidden":"true"}},[t._v("#")]),t._v(" 6. 使用编辑器修改一下文件，终端进入代码仓库，然后通过 "),s("strong",[t._v("git add .")]),t._v(" 命令把修改添加进缓存区")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[t._v("cd")]),t._v(" repository\n"),s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" add "),s("span",{attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n")])]),s("h4",{attrs:{id:"_7-把缓存区中的代码通过命令-git-commit-m-update-file-添加到-head-区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-把缓存区中的代码通过命令-git-commit-m-update-file-添加到-head-区","aria-hidden":"true"}},[t._v("#")]),t._v(" 7. 把缓存区中的代码通过命令 "),s("strong",[t._v('git commit -m "update file"')]),t._v(" 添加到 HEAD 区")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{attrs:{class:"token string"}},[t._v('"update file"')]),t._v("\n")])]),s("blockquote",[s("p",[t._v("update file 为这次修改的描述，可以是其他描述，必填")])]),s("h4",{attrs:{id:"_8-把代码通过-git-push-推上远程的-github-仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-把代码通过-git-push-推上远程的-github-仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 8. 把代码通过 "),s("strong",[t._v("git push")]),t._v(" 推上远程的 Github 仓库")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])]),s("h3",{attrs:{id:"练习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#练习","aria-hidden":"true"}},[t._v("#")]),t._v(" 练习")]),s("ol",[s("li",[t._v("注册 "),s("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github")]),t._v(" 账号")]),s("li",[t._v("新建仓库名为 studytask（ 标注 Initialize this repository with a README ）")]),s("li",[t._v("打开终端（ win 用户打开 git bash ）"),s("code",[t._v("cd desktop")]),t._v(" 进入桌面")]),s("li",[s("code",[t._v("git clone https://github.com/username/studytask.git")]),t._v(" 把Github仓库clone到本地")]),s("li",[t._v("使用 Sublime 编辑器打开项目文件，编辑 "),s("strong",[t._v("READMD.md")]),t._v(" ,添加 hello 文本，保存。")]),s("li",[t._v("终端进入仓库路径"),s("code",[t._v("cd studystask")])]),s("li",[t._v("输入命令 "),s("code",[t._v("git add .")]),t._v(" 把目录当前所有修改添加到缓存区")]),s("li",[t._v("输入命令 "),s("code",[t._v('git commit -m "Edit README"')]),t._v(" 添加备注并进入HEAD区域")]),s("li",[t._v("输入命令 "),s("code",[t._v("git push")]),t._v(" 把HEAD区域文件推送到Github")]),s("li",[t._v("在网页上打开仓库页面，看修改是否同步成功")]),s("li",[t._v("重复 1～10，至少 10 遍")])]),s("h3",{attrs:{id:"资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资源","aria-hidden":"true"}},[t._v("#")]),t._v(" 资源")]),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github")])]),s("li",[s("a",{attrs:{href:"https://www.iterm2.com/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("iterm2 MacOS终端利器")])]),s("li",[s("a",{attrs:{href:"http://www.bootcss.com/p/git-guide/",target:"_blank",rel:"noopener noreferrer"}},[t._v("git-guide")])]),s("li",[s("a",{attrs:{href:"https://git-scm.com/book/zh/v2",target:"_blank",rel:"noopener noreferrer"}},[t._v("git-scm.com")])])])])}],!1,null,null,null);a.default=r.exports}}]);