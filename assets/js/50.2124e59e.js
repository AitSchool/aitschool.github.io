(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{1622:function(t,i,s){"use strict";s.r(i);var a=[function(){var t=this,i=t.$createElement,a=t._self._c||i;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"代码托管"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码托管","aria-hidden":"true"}},[t._v("#")]),t._v(" 代码托管")]),a("p",[t._v("2005 年，Linux 的缔造者 Linus Torvalds 对现有的代码托管工具效率不满意，便自己做了一个名叫 Git 的版本控制工具。Git 颇具革命性，允许大量开发者同时为源代码贡献新代码，彼此间并不影响，最重要的在于它是开源的。")]),a("p",[t._v("三个来自旧金山的年轻人认为 Git 的潜力巨大，在 2008 年正式推出了 GitHub，一个基于 Git 的代码托管网站。他们没想到，GitHub  后来击败了元老 SourceForge 和背景强大的 Google Code，成为了全世界最受欢迎的代码托管网站。")]),a("p",[t._v("Git 的精髓在于让所有人的贡献无缝合并。而 Github 的天才之处在于理解了 Git 的精髓。")]),a("p",[t._v("熟练使用Git/GitHub是互联网公司程序员的必备技能之一。当开发中遇到困难或者职业技能遇到瓶颈时，GitHub简直是相见恨晚的利器，身为一线开发者，如果没有接触过GitHub，的确是一大损失。因此，从今天开始，本课程就将带领大家敲开GitHub的大门。")]),a("h2",{attrs:{id:"github"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github","aria-hidden":"true"}},[t._v("#")]),t._v(" Github")]),a("p",[a("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github")]),t._v(" -- 面向开源及私有软件项目的托管平台")]),a("p",[t._v("GitHub ≠ Git，很多人以为 GitHub 就是 Git，其实这是一个理解误区。")]),a("p",[t._v("Git 是一款免费、开源的分布式版本控制系统，由著名的 Linux 发明者 Linus Torvalds 开发。说到版本控制系统，大多数人都用过 SVN ，Git 是新时代的产物，如果你还在用 SVN 来管理代码，那就真的有些落伍了。不管是学习 GitHub ，还是以后想从事编程行业，Git 都可以算是一项必备技能，所以，建议大家可以自学下 Git ，后面的课程中也会向大家推荐一些适合新手学习Git的资料。")]),a("p",[t._v("GitHub 主要是提供基于 git 的版本托管服务，也就是说，现在 GitHub 上托管的所有项目代码都是基于 Git 来进行版本控制的，所以 Git 只是 GitHub 上用来管理项目的一个工具而已，GitHub 的功能可远不止于此！")]),a("p",[t._v("由于程序员群体里缺少女性，拥有高纯度男性用户的 GitHub，也被戏称为全球最大的同性交友网站……😁😁")]),a("p",[a("img",{attrs:{src:s(61),alt:"what s Github"}})]),a("p",[t._v("全球顶级科技公司纷纷加入 GitHub ，并贡献他们自己的项目代码")]),a("ul",[a("li",[t._v("Google: https://github.com/google")]),a("li",[t._v("苹果: https://github.com/apple")]),a("li",[t._v("Facebook: https://github.com/facebook")]),a("li",[t._v("Twitter：https://github.com/twitter")]),a("li",[t._v("微软：https://github.com/microsoft")]),a("li",[t._v("Square：https://github.com/square")]),a("li",[t._v("阿里：https://github.com/alibaba")]),a("li",[t._v("...")])]),a("p",[t._v("全球顶级开源项目都优先选择在 GitHub 上开源")]),a("ul",[a("li",[t._v("Linux：https://github.com/torvalds/linux")]),a("li",[t._v("Rails：https://github.com/rails/rails")]),a("li",[t._v("Nodejs：https://github.com/nodejs/node")]),a("li",[t._v("Swift：https://github.com/apple/swift")]),a("li",[t._v("CoffeeScript：https://github.com/jashkenas/coffeescript")]),a("li",[t._v("Ruby：https://github.com/ruby/ruby")])]),a("h3",{attrs:{id:"github-有什么用？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-有什么用？","aria-hidden":"true"}},[t._v("#")]),t._v(" Github 有什么用？")]),a("p",[t._v("1.学习优秀的开源项目")]),a("p",[t._v("开源社区一直有一句流行的话叫「不要重复发明轮子」，某种意义上正是因为开源社区的贡献，我们的软件开发才能变得越来越容易，越来越快速。试想你在做项目时，如果每一模块都要自己去写，如网络库、图片加载库、ORM库等等，自己写的好不好是一回事，时间与资源是很大的成本。对于大公司可能会有人力与资源去发明一套自己的轮子，但是对于大部分互联网创业公司来说时间就是一切。而且你在使用开源项目的过程也可以学习他们优秀的设计思想、实现方式，这是最好的学习资料，也是一份提升自己能力的绝佳方式！")]),a("p",[t._v("2.多人协作")]),a("p",[t._v("如果你想发起一个项目，比如翻译一份不错的英文文档，觉得一个人的精力不够，所以你需要更多的人参与进来，这时候 GitHub 是你的最佳选择，感兴趣的人可以参与进来，利用业余时间对这个项目做贡献，然后可以互相审核、合并，简直不要太棒！")]),a("p",[t._v("3.搭建博客、个人网站或者公司官网")]),a("p",[t._v("这个就不用多说了，现在越来越多的博客都是基于 GitHub Pages 来搭建的了，你可以随心所欲的定制自己的样式，可以给你博客买个逼格高的域名，再也不用忍受各大博客网站的约束与各式各样的广告了！")]),a("p",[t._v("4.写作")]),a("p",[t._v("如果你喜欢写作，而且基于 Markdown， 并准备出版书籍，那么推荐你用 Gitbook ，技术写作人的最爱！")]),a("p",[t._v("5.个人简历")]),a("p",[t._v("如果你有一个活跃的 GitHub 账号，上面有自己不错的开源项目，还经常给别的开源项目提问题，push 代码，那么你找工作将是一个非常大的优势，现在程序员的招聘很多公司都很看中你 GitHub 账号，某种意义上 GitHub 就可以算是你的简历了。而且不仅国内，很多国外的科技公司都会通过 GitHub 来寻找优秀的人才，比如我甚至通过 GitHub 收到过 Facebook 的邀请邮件！")]),a("h3",{attrs:{id:"注册github-并创建仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注册github-并创建仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 注册Github 并创建仓库")]),a("p",[t._v("从现在开始，立刻、马上去注册个 GitHub 。")]),a("ol",[a("li",[t._v("GitHub 需要翻墙吗？")])]),a("p",[t._v("答案是不需要翻墙的。对于国内用户，GitHub 在2013年之前总是\b访问不稳定，2013年初的时候最为严重，一度被封。当时李开复老师因为此事，特公开发布抗议 GitHub 被封的微博；此外大量使用 GitHub 的程序员也是长期深受访问限制的困扰，很多人对此事怨声载道。因此，李开复老师的公开发言，在IT界产生了共鸣，大家纷纷在微博上转发谴责，算是当时的重大事件了，后来因为此事反响剧烈，没过几天 GitHub 就可以正常访问了，为此，我们应该感谢李开复老师敢于站出来的勇气。可以说，如果没有 GitHub ，中国的编程水平起码要倒退好几年！")]),a("p",[t._v("由于GitHub 的影响力较大，因此，也成为了各种黑客攻击的对象，所以，偶尔也会有宕机访问不了的情况，但是好在不会被封，大家也不必担心。访问 GitHub 不用翻墙，只是可能访问速度稍慢些，另外为了维护一个和谐的环境，在这里呼吁大家不要在 GitHub 上发表任何关于政治的言论与文章，在 GitHub 上我们只是单纯的技术交流，无关政治，在复杂的大环境下，希望 GitHub 永远是程序员们的一片净土！")]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("英语差，0基础能学会吗？")])]),a("p",[t._v("不少人会提出疑问：GitHub 是全英文的，英文不好怎么办？请放心，GitHub 虽然是全英文，但是对英语水平的要求并不是很高，都是些简单的词汇，你会觉得很难，只是因为对英文网站反射性的抵触而已，相信自己，只要认真学习本课程，你一定会慢慢爱上使用GitHub的！")]),a("p",[t._v("在清楚了上述两个问题后，让我们开始注册 GitHub 吧。")]),a("p",[t._v("打开 "),a("a",{attrs:{href:"https://github.com/join?source=header-home",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github")]),t._v(" 登录页面，输入邮箱注册账号。Github为国外网站，由于墙的原因，打开速度会又点点慢。")]),a("p",[t._v("跟一般的网站注册流程一样，需要填用户名、邮箱、密码，需要注意的是填写用户名时，请不要过于随意，这个名字是你以后常用的用户名，也强烈建议在各大社交账号都使用同一个用户名，这样识别度较高，比如博客域名、GitHub、知乎等其他社交账号 ID 都统一处理，下面，来给自己取个好的用户名吧。")]),a("p",[a("img",{attrs:{src:s(60),alt:"sigin up"}}),a("img",{attrs:{src:s(59),alt:"new repository"}}),a("img",{attrs:{src:s(58),alt:"eidt repository"}}),a("img",{attrs:{src:s(57),alt:"repository"}})]),a("p",[t._v("GitHub 有两种，一种是公开，另一种是私有。前者是免费的，所创建的项目是开放的，所有人都能看得到；后者是收费的，企业用户较多，通常情况下企业会使用 GitHub 的私有仓库托管自己的项目，这也是 GitHub 的一种盈利模式。对于个人而言，可以直接默认选择公开。")]),a("h3",{attrs:{id:"github的基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github的基本概念","aria-hidden":"true"}},[t._v("#")]),t._v(" Github的基本概念")]),a("p",[t._v("认识了 GitHub 的基本面貌之后，接下来需要了解一些 GitHub 的基本概念，这些概念是你经常会接触并遇到的。")]),a("ul",[a("li",[t._v("Repository")])]),a("p",[t._v("仓库的意思，即你的项目，如果你想在 GitHub 上开源一个项目，那就必须要新建一个 Repository ，如果你开源的项目多了，你就会拥有多个 Repositories 。")]),a("ul",[a("li",[t._v("Issue")])]),a("p",[t._v("问题的意思，举个例子，就是你开源了一个项目，别人发现你的项目中有bug，或者哪些地方做的不够好，他就可以给你提个 Issue ，即问题，提的问题多了，也就是 Issues ，然后你看到了这些问题就可以去逐个修复，修复ok了就可以一个个的 Close 掉。")]),a("ul",[a("li",[t._v("Star")])]),a("p",[t._v("这个好理解，就是给项目点赞，但是在 GitHub 上的点赞远比微博、知乎点赞难的多，如果你有一个项目获得100个star都算很不容易了！")]),a("ul",[a("li",[t._v("Fork")])]),a("p",[t._v("这个不好翻译，如果实在要翻译我把他翻译成分叉，什么意思呢？你开源了一个项目，别人想在你这个项目的基础上做些改进，然后应用到自己的项目中，这个时候他就可以 Fork 你的项目，这个时候他的 GitHub 主页上就多了一个项目，只不过这个项目是基于你的项目基础（本质上是在原有项目的基础上新建了一个分支，分支的概念后面会在讲解Git的时候说到），他就可以随心所欲的去改进，但是丝毫不会影响原有项目的代码与结构。")]),a("ul",[a("li",[t._v("Pull Request")])]),a("p",[t._v("发起请求，这个其实是基于 Fork 的，还是上面那个例子，如果别人在你基础上做了改进，后来觉得改进的很不错，应该要把这些改进让更多的人收益，于是就想把自己的改进合并到原有项目里，这个时候他就可以发起一个 Pull Request（简称PR） ，原有项目创建人就可以收到这个请求，这个时候他会仔细review你的代码，并且测试觉得OK了，就会接受你的PR，这个时候你做的改进原有项目就会拥有了。")]),a("ul",[a("li",[t._v("Watch")])]),a("p",[t._v("这个也好理解就是观察，如果你 Watch 了某个项目，那么以后只要这个项目有任何更新，你都会第一时间收到关于这个项目的通知提醒。")]),a("ul",[a("li",[t._v("Gist")])]),a("p",[t._v("有些时候你没有项目可以开源，只是单纯的想分享一些代码片段，这个时候 Gist 就派上用场了！")]),a("h2",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git","aria-hidden":"true"}},[t._v("#")]),t._v(" Git")]),a("p",[a("a",{attrs:{href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git")]),t._v(" -- 开源的分布式版本控制系统")]),a("p",[t._v("我们用于远程管理 Github 仓库中的代码，是一个管理你的「代码的历史记录」的工具。")]),a("p",[t._v("Git 是 Linux 发明者 Linus 开发的一款新时代的版本控制系统，那么到底什么是版本控制系统呢？网上各种详细的介绍，大多枯燥乏味，对于新手很难理解，这里只举几个例子来帮助大家理解。")]),a("p",[t._v("熟悉编程的人都知道，在软件开发中源代码是最重要的，那么对源代码的管理也就变得更加重要了，以下几种情况在开发中最为常见：")]),a("ul",[a("li",[t._v("在开发程序时，为了防止代码丢失，需要在本地机器与远程服务器各存放一份，并且还需要有一套机制使本地可以与远程同步；")]),a("li",[t._v("开发中通常是几个人做同一个项目，要对同一份代码做更改，这个时候既需要大家互不影响，又需要各自可以同步别人的代码；")]),a("li",[t._v("开发的过程中免不了有bug，有时候刚发布的功能就出现了严重的bug，这个时候需要紧急对代码进行还原；")]),a("li",[t._v("随着版本迭代的增多，作为开发者需要清楚的知道每一个历史版本的代码更改记录，甚至知道每个人历史提交代码的情况。")])]),a("p",[t._v("以上的这些情况，都是版本控制系统可以解决的问题。版本控制实际上就是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统，对于软件开发领域来说版本控制是最重要的环节，而 Git 毫无疑问是当下最流行、最好用的版本控制系统。")]),a("h3",{attrs:{id:"git-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-安装","aria-hidden":"true"}},[t._v("#")]),t._v(" Git 安装")]),a("p",[t._v("Git 是一个版本控制系统，也可以理解为一个工具，跟 Java 类似，使用之前必须先进行下载安装， Mac 笔记本上其实系统自带了 Git ，不过这里统一提供各平台的安装方式，这部分就不过多介绍，相信大家可以搞定。")]),a("ul",[a("li",[t._v("win 用户下载 "),a("a",{attrs:{href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git")]),t._v(" 及 Gitbash(在按照Git中包含)")]),a("li",[t._v("Mac 用户下载 xcode 及 "),a("a",{attrs:{href:"(https://www.iterm2.com/index.html)"}},[t._v("item")])]),a("li",[t._v("Linux：apt-get install git")])]),a("h3",{attrs:{id:"如何学习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何学习","aria-hidden":"true"}},[t._v("#")]),t._v(" 如何学习")]),a("p",[t._v("安装好 Git 之后，怎么学习是个问题，其实关于 Git 有很多图形化的软件可以操作，这里推荐大家使用命令行开始学习，如果你没接触过命令行，开始可能会有所抵触，但是大量实践证明，只有一开始学习命令行，才能让你对 Git 的每一步操作有深刻的理解，而在熟练掌握之后，使用任何的图形化的软件都可以去操作。")]),a("h3",{attrs:{id:"查看-git-版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看-git-版本","aria-hidden":"true"}},[t._v("#")]),t._v(" 查看 Git 版本")]),a("p",[t._v("按照完毕后打开终端输入 "),a("strong",[t._v("git version")]),t._v(" 查看当前 Git 版本，查看到版本号为按照成功")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" version\n"),a("span",{attrs:{class:"token operator"}},[t._v(">>")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" version 2.15.1 "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Apple Git-101"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("h3",{attrs:{id:"终端进入桌面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#终端进入桌面","aria-hidden":"true"}},[t._v("#")]),t._v(" 终端进入桌面")]),a("p",[t._v("在当前终端中打开为 用户当前路径，桌面文件夹一般处于用户之中。我们可以通过命令 "),a("strong",[t._v("cd")]),t._v(" 进入到桌面，通过 "),a("strong",[t._v("ls")]),t._v(" 查看我们桌面的内容。")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("cd")]),t._v(" Desktop\n")])]),a("blockquote",[a("p",[t._v("注意，一定要通过 "),a("strong",[t._v("ls")]),t._v(" 命令看看当前是否在桌面，看看终端打印出来的文件和文件夹是否与你当前桌面相同")])]),a("h3",{attrs:{id:"克隆-github-的仓库代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#克隆-github-的仓库代码","aria-hidden":"true"}},[t._v("#")]),t._v(" 克隆 Github 的仓库代码")]),a("p",[t._v("在上述之前我们创建了仓库，然后进入仓库页面点击 Download or Clone 按钮，获取仓库的 URL 地址")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/username/repository.git\n")])]),a("h3",{attrs:{id:"使用编辑器修改一下文件，终端进入代码仓库，然后通过-git-add-命令把修改添加进缓存区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用编辑器修改一下文件，终端进入代码仓库，然后通过-git-add-命令把修改添加进缓存区","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用编辑器修改一下文件，终端进入代码仓库，然后通过 "),a("strong",[t._v("git add .")]),t._v(" 命令把修改添加进缓存区")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("cd")]),t._v(" repository\n"),a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" add "),a("span",{attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n")])]),a("h3",{attrs:{id:"把缓存区中的代码通过命令-git-commit-m-update-file-添加到-head-区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#把缓存区中的代码通过命令-git-commit-m-update-file-添加到-head-区","aria-hidden":"true"}},[t._v("#")]),t._v(" 把缓存区中的代码通过命令 "),a("strong",[t._v('git commit -m "update file"')]),t._v(" 添加到 HEAD 区")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{attrs:{class:"token string"}},[t._v('"update file"')]),t._v("\n")])]),a("blockquote",[a("p",[t._v("update file 为这次修改的描述，可以是其他描述，必填")])]),a("h3",{attrs:{id:"把代码通过-git-push-推上远程的-github-仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#把代码通过-git-push-推上远程的-github-仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 把代码通过 "),a("strong",[t._v("git push")]),t._v(" 推上远程的 Github 仓库")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])]),a("h3",{attrs:{id:"ssh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssh","aria-hidden":"true"}},[t._v("#")]),t._v(" SSH")]),a("p",[t._v("拥有了一个 GitHub 账号之后，就可以自由的 clone 或者下载其他项目，也可以创建自己的项目，但是无法提交代码。仔细想想也知道，如果可以随意提交代码，那么 GitHub 上的项目岂不乱套了，所以提交代码之前一定是需要某种授权的，而 GitHub 上一般都是基于 SSH 授权的。")]),a("p",[t._v("那么什么是 SSH 呢？")]),a("p",[t._v("简单点说，SSH是一种网络协议，用于计算机之间的加密登录。目前是每一台 Linux 电脑的标准配置。而大多数 Git 服务器都会选择使用 SSH 公钥来进行授权，所以想要在 GitHub 提交代码的第一步就是要先添加 SSH key 配置。")]),a("p",[t._v("Linux 与 Mac 都是默认安装了 SSH ，而 Windows 系统安装了 Git Bash 应该也是带了 SSH 的。大家可以在终端（win下在 Git Bash 里）输入 ssh 如果出现以下提示证明你本机已经安装 SSH， 否则请搜索自行安装下。")]),a("p",[t._v("接下来输入 "),a("strong",[t._v("ssh-keygen -t rsa")]),t._v(" 命名，意思是指定 rsa 算法生成密钥，接着连续三个回车键（不需要输入密码）就会生成两个文件 id_rsa 和 id_rsa.pub ，id_rsa 是密钥，id_rsa.pub 是公钥。这两个文件默认分别在如下目录里生成：")]),a("p",[t._v("Linux/Mac 系统 在 "),a("strong",[t._v("~/.ssh")]),t._v(" 下，win系统在 "),a("strong",[t._v("/c/Documents and Settings/username/.ssh")]),t._v(" 下，都是隐藏文件，相信你们有办法查看的。")]),a("p",[t._v("接下来要做的是把 id_rsa.pub 的内容添加到 GitHub 上，这样本地的 id_rsa 密钥跟 GitHub 上的 id_rsa.pub 公钥进行配对，授权成功才可以提交代码。")]),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),a("p",[t._v("更多关于 Git 操作，包括分支与合并。Fetch 和 Update 及 Pull 命令，请行查阅文档学习。")])]),a("h2",{attrs:{id:"练习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#练习","aria-hidden":"true"}},[t._v("#")]),t._v(" 练习")]),a("ol",[a("li",[t._v("注册 "),a("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github")]),t._v(" 账号")]),a("li",[t._v("新建仓库名为 studytask（ 标注 Initialize this repository with a README ）")]),a("li",[t._v("打开终端（ win 用户打开 git bash ）"),a("code",[t._v("cd desktop")]),t._v(" 进入桌面")]),a("li",[a("code",[t._v("git clone https://github.com/username/studytask.git")]),t._v(" 把Github仓库clone到本地")]),a("li",[t._v("使用 Sublime 编辑器打开项目文件，编辑 "),a("strong",[t._v("READMD.md")]),t._v(" ,添加 hello 文本，保存。")]),a("li",[t._v("终端进入仓库路径"),a("code",[t._v("cd studystask")])]),a("li",[t._v("输入命令 "),a("code",[t._v("git add .")]),t._v(" 把目录当前所有修改添加到缓存区")]),a("li",[t._v("输入命令 "),a("code",[t._v('git commit -m "Edit README"')]),t._v(" 添加备注并进入HEAD区域")]),a("li",[t._v("输入命令 "),a("code",[t._v("git push")]),t._v(" 把HEAD区域文件推送到Github")]),a("li",[t._v("在网页上打开仓库页面，看修改是否同步成功")])]),a("h2",{attrs:{id:"资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#资源","aria-hidden":"true"}},[t._v("#")]),t._v(" 资源")]),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github")])]),a("li",[a("a",{attrs:{href:"https://www.iterm2.com/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("iterm2 MacOS终端利器")])]),a("li",[a("a",{attrs:{href:"http://www.bootcss.com/p/git-guide/",target:"_blank",rel:"noopener noreferrer"}},[t._v("git-guide")])]),a("li",[a("a",{attrs:{href:"https://git-scm.com/book/zh/v2",target:"_blank",rel:"noopener noreferrer"}},[t._v("git-scm.com")])])])])}],e=s(0),r=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},a,!1,null,null,null);i.default=r.exports},57:function(t,i,s){t.exports=s.p+"assets/img/guide_03_github_repository.cd3f6fd3.jpg"},58:function(t,i,s){t.exports=s.p+"assets/img/guide_03_github_editrepository.56c0bde8.jpg"},59:function(t,i,s){t.exports=s.p+"assets/img/guide_03_github_newrepository.e3195b13.jpg"},60:function(t,i,s){t.exports=s.p+"assets/img/guide_03_github_signup.80e385b7.jpg"},61:function(t,i,s){t.exports=s.p+"assets/img/guide_03_github_what_github.bdaccdb3.jpg"}}]);