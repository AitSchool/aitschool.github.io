(window.webpackJsonp=window.webpackJsonp||[]).push([[286],{1366:function(t,a,s){"use strict";s.r(a);var n=[function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"_1-5-dingoapi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-dingoapi","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.5 DingoApi")]),n("p",[n("a",{attrs:{href:"https://github.com/dingo/api/",target:"_blank",rel:"noopener noreferrer"}},[t._v("dingo/api")]),t._v(" 是一个 Lumen 和 Laravel 都可用的 RestFul 工具包，帮助我们快速的开始构建 RestFul Api。我们的目的是教会大家如何快速的搭建并使用这个包，更多的功能，还需要你仔细阅读 DingoApi 的 "),n("a",{attrs:{href:"https://github.com/dingo/api/wiki",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档")]),t._v(" 来深入的学习和理解，"),n("a",{attrs:{href:"https://github.com/liyu001989/dingo-api-wiki-zh",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里")]),t._v("有一份中英对照的翻译，或许能帮到你。")]),n("h2",{attrs:{id:"_1-安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 安装")]),n("p",[t._v("Laravel 5.5 的适配版本为"),n("code",[t._v("dingo/api:v2.0.0-alpha2")]),t._v("，所以我们需要安装这个 tag")]),n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ composer require dingo/api:2.0.0-alpha2\n")])]),n("p",[t._v("发现报错了：")]),n("p",[n("img",{attrs:{src:s(786),alt:"file"}})]),n("p",[t._v("dingo 的文档中有说明，现在这个包还处在开发阶段，没有一个稳定的 release 版本，dingo/api 依赖的 "),n("code",[t._v("dingo/blueprint")]),t._v(" 与  "),n("code",[t._v("phpunit")]),t._v(" 都依赖了 "),n("code",[t._v("phpdocumentor/reflection-docblock")]),t._v(" 但是依赖的版本不同，导致出现了冲突。但是我们发现 "),n("code",[t._v("dingo/blueprint")]),t._v("  的开发版本 "),n("code",[t._v("dev-master")]),t._v(" 解决了冲突，可以正常安装，所以我们修改一下 "),n("code",[t._v("composer.json")]),t._v("：")]),n("p",[n("em",[t._v("composer.json")])]),n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),n("span",{attrs:{class:"token double-quoted-string string"}},[t._v('"config"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token double-quoted-string string"}},[t._v('"preferred-install"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token double-quoted-string string"}},[t._v('"dist"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{attrs:{class:"token double-quoted-string string"}},[t._v('"sort-packages"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{attrs:{class:"token double-quoted-string string"}},[t._v('"optimize-autoloader"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token double-quoted-string string"}},[t._v('"minimum-stability"')]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token double-quoted-string string"}},[t._v('"dev"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token double-quoted-string string"}},[t._v('"prefer-stable"')]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("p",[t._v("增加了两句：")]),n("ul",[n("li",[n("code",[t._v('"minimum-stability" : "dev"')]),t._v(" ——设定的最低稳定性的版本为 "),n("code",[t._v("dev")]),t._v(" 也就是可以依赖开发版本的扩展包；")]),n("li",[n("code",[t._v('"prefer-stable" : true')]),t._v(" —— Composer 优先使用更稳定的包版本。")])]),n("p",[t._v("我们设定项目可以依赖开发版本扩展包，但是当依赖有稳定版本可以安装的时候，优先安装稳定版。")]),n("p",[t._v("再次执行命令安装：")]),n("p",[n("img",{attrs:{src:s(785),alt:"file"}})]),n("p",[t._v("看到 "),n("code",[t._v("dingo/api")]),t._v(" 已经成功安装了。")]),n("h2",{attrs:{id:"_2-配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 配置")]),n("p",[t._v("先将 dingo 的配置文件 publish 出来")]),n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ php artisan vendor:publish\n")])]),n("p",[n("img",{attrs:{src:s(784),alt:"file"}})]),n("p",[t._v("执行成功后，我们会在 "),n("code",[t._v("config")]),t._v(" 目录先看到 "),n("code",[t._v("api.php")]),t._v(" 文件，打开文件我们可以看到所有的配置都是可以再 env 中修改的，下面我们主要讲解一下我们需要用到的配置")]),n("ul",[n("li",[n("p",[t._v("API_STANDARDS_TREE 和 API_SUBTYPE")]),n("p",[t._v("上一节我们已经讨论了 API 版本的重要性，推荐的做法是使用 Accept 头来指定我们需要访问的 API 版本。"),n("code",[t._v("API_STANDARDS_TREE")]),t._v(" 和 "),n("code",[t._v("API_SUBTYPE")]),t._v(" 这两个配置就的版本控制有关")]),n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Accept: application/<API_STANDARDS_TREE>.<API_SUBTYPE>.v1+json\n")])]),n("p",[t._v("API_STANDARDS_TREE 有是三个值可选")]),n("ul",[n("li",[n("code",[t._v("x")]),t._v(" 本地开发的或私有环境的")]),n("li",[n("code",[t._v("prs")]),t._v(" 未对外发布的，提供给公司 app，单页应用，桌面应用等")]),n("li",[n("code",[t._v("vnd")]),t._v(" 对外发布的，开放给所有用户")])]),n("p",[t._v("对于我们的项目，暂时可以选择 "),n("code",[t._v("prs")]),t._v("。")]),n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("API_STANDARDS_TREE=prs\n")])]),n("p",[t._v("API_SUBTYPE 一般情况下是我们项目的简称，我们的项目叫"),n("code",[t._v("larabbs")])]),n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("API_SUBTYPE=larabbs\n")])]),n("p",[t._v("所以我们可以通过如下方式来访问不同版本的 API")]),n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("访问 v1 版本\nAccept: application/prs.larabbs.v1+json\n访问 v2 版本\nAccept: application/prs.larabbs.v2+json\n")])])]),n("li",[n("p",[t._v("API_PREFIX 和 API_DOMAIN\n对于一个项目，通过前缀或者子域名的方式来区分开 API 与 Web 等页面访问地址是十分有必要的。假如正式上线的项目地址为 "),n("code",[t._v("www.larabbs.com")]),t._v("，我们可以为 API 添加一个前缀")]),n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("API_PREFIX=api\n")])]),n("p",[t._v("通过 "),n("code",[t._v("www.larabbs.com/api")]),t._v(" 来访问 API。\n或者有可能单独配置一个子域名"),n("code",[t._v("api.larabbs.com")])]),n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("API_DOMAIN=api.larabbs.com\n")])]),n("p",[t._v("通过 api.larabbs.com 来访问 API。")]),n("p",[t._v("特别要注意的是："),n("strong",[t._v("前缀和子域名，两者有且只有一个")]),t._v("。本教程选择 "),n("code",[t._v("API_PREFIX")]),t._v(" 的方式。")])]),n("li",[n("p",[t._v("API_VERSION\n默认的 API 版本，当我们没有传 "),n("code",[t._v("Accept")]),t._v(" 头的时候，默认访问该版本的 API。一般情况下配置 v1 即可。")])]),n("li",[n("p",[t._v("API_STRICT\n是否开启严格模式，如果开启，则必须使用 "),n("code",[t._v("Accept")]),t._v(" 头才可以访问 API，也就是说直接通过浏览器，访问某个 GET 调用的接口，如"),n("code",[t._v("https://api.larabbs.com/users")]),t._v("，将会报错。必须使用 Postman 之类的调试工具，设置 "),n("code",[t._v("Accept")]),t._v(" 后才可访问。可以根据需求开启，默认情况下为 false。")])]),n("li",[n("p",[t._v("API_DEBUG\n测试环境，打开 debug，方便我们看到错误信息，定位错误。\n最后我们的配置如下\n.env")])])]),n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v(".")]),t._v("\nAPI_STANDARDS_TREE"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("prs\nAPI_SUBTYPE"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("larabbs\nAPI_PREFIX"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("api\nAPI_VERSION"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("v1\nAPI_DEBUG"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n")])]),n("p",[t._v("注意 "),n("code",[t._v(".env")]),t._v(" 文件是不会提交到版本库中的，所以可以将以下代码复制到 "),n("code",[t._v(".env.example")]),t._v(" 中，提交到版本库，方便其他环境部署。\n.env.example")]),n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("# dingo config")]),t._v("\nAPI_STANDARDS_TREE"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("\nAPI_SUBTYPE"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("\nAPI_PREFIX"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("\nAPI_VERSION"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("\nAPI_DEBUG"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("\n")])]),n("h2",{attrs:{id:"_3-版本控制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-版本控制","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 版本控制")]),n("p",[t._v("最后将修改的文件加入到版本控制中。")]),n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ "),n("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" add -A\n$ "),n("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),n("span",{attrs:{class:"token string"}},[t._v('"add dingo"')]),t._v("\n")])])])}],e=s(0),r=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},n,!1,null,null,null);a.default=r.exports},784:function(t,a,s){t.exports=s.p+"assets/img/1.5_3.6fecb817.png"},785:function(t,a,s){t.exports=s.p+"assets/img/1.5_2.c5375912.png"},786:function(t,a,s){t.exports=s.p+"assets/img/1.5_1.8bfa73b1.png"}}]);